{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "webCRM REST API",
        "description": "Version: 1.0.0.0.<br>Note that you can access live data through this web site, so be careful when updating or deleting things.",
        "contact": {
            "name": "webCRM A/S",
            "url": "https://webcrm.com/",
            "email": "api@webcrm.com"
        }
    },
    "paths": {
        "/Activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all activities",
                "operationId": "ActivitiesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Adds new activity and returns assigned id",
                "operationId": "ActivitiesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "activityDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Activities"
                ],
                "summary": "Updates or inserts submitted activities. Returns assigned ids for inserted activities and error messages if insert/update fails.",
                "operationId": "ActivitiesPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "activities",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns activity with specified id",
                "operationId": "ActivitiesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActivityDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Updates activity with specified id",
                "operationId": "ActivitiesByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "activityDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/{id}/Move": {
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Moves activity to organisation",
                "operationId": "ActivitiesByIdMovePost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "moveDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MoveDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/{id}/Notes": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns activity's notes",
                "operationId": "ActivitiesByIdNotesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActivityNoteDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Adds new note",
                "operationId": "ActivitiesByIdNotesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "noteDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CreateActivityNoteDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/{id}/NewestNote": {
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Removes newest note",
                "operationId": "ActivitiesByIdNewestNoteDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/ByResponsible/{userId}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all activities by responsible id",
                "operationId": "ActivitiesByResponsibleByUserIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/ByOrganisation/{organisationId}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all activities by organisation id",
                "operationId": "ActivitiesByOrganisationByOrganisationIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all activities by create date (startDate <= createDate < endDate)",
                "operationId": "ActivitiesFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/ByStatus/{status}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all activities by status id",
                "operationId": "ActivitiesByStatusByStatusGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Planned",
                            "Active",
                            "Completed"
                        ]
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/LinkedData": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns all linked data for activities",
                "operationId": "ActivitiesLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Creates linked data for activities",
                "operationId": "ActivitiesLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Deletes all linked data for activities",
                "operationId": "ActivitiesLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns linked data for activities by id",
                "operationId": "ActivitiesLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Updates linked data for activities",
                "operationId": "ActivitiesLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Deletes linked data for activities by id",
                "operationId": "ActivitiesLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/LinkedSetup": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns linked setup for activities",
                "operationId": "ActivitiesLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/Hooks": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns own activity hooks",
                "operationId": "ActivitiesHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Adds new activity hook and returns assigned id",
                "operationId": "ActivitiesHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "activityHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Activities/Hooks/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Returns activity hook with specified id",
                "operationId": "ActivitiesHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ActivityHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Updates activity hook with specified id",
                "operationId": "ActivitiesHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "activityHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActivityHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Deletes activity hook with specified id",
                "operationId": "ActivitiesHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Auth": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Returns authorized user info",
                "operationId": "AuthGet",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Returns accsess token",
                "operationId": "AuthPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dbnCode",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userName",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponseDto"
                        }
                    }
                }
            }
        },
        "/Auth/ApiLogin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Returns accsess token",
                "operationId": "AuthApiLoginPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "authCode",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponseDto"
                        }
                    }
                }
            }
        },
        "/Auth/CrmLogin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Returns accsess token",
                "operationId": "AuthCrmLoginPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "publishCode",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "loginName",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponseWithUserIdDto"
                        }
                    }
                }
            }
        },
        "/Auth/ApiRefresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refreshs accsess token",
                "operationId": "AuthApiRefreshPost",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "refreshToken",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponseDto"
                        }
                    }
                }
            }
        },
        "/Auth/CrmRefresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refreshs accsess token",
                "operationId": "AuthCrmRefreshPost",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "refreshToken",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponseDto"
                        }
                    }
                }
            }
        },
        "/Budgets/{id}": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Returns budget with specified id",
                "operationId": "BudgetsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BudgetDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Budgets": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Returns all budgets",
                "operationId": "BudgetsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BudgetDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries",
                "operationId": "DeliveriesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Adds new delivery and returns assigned id",
                "operationId": "DeliveriesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "delivery",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Updates or inserts submitted deliveries. Returns assigned ids for inserted deliveries and error messages if insert/update fails.",
                "operationId": "DeliveriesPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "deliveries",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/{id}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns delivery with specified id",
                "operationId": "DeliveriesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeliveryDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Updates delivery with specified id",
                "operationId": "DeliveriesByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "delivery",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/{id}/ConvertToOpportunity/{level}": {
            "post": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Convert delivery to opportunity",
                "operationId": "DeliveriesByIdConvertToOpportunityByLevelPost",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "level",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/{id}/Move": {
            "post": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Moves delivery to organisation",
                "operationId": "DeliveriesByIdMovePost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "moveDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MoveDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/{id}/QuotationLines": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all quotation lines by delivery id",
                "operationId": "DeliveriesByIdQuotationLinesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries by create date (startDate <= createDate < endDate)",
                "operationId": "DeliveriesFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/ByOrganisation/{organisationId}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries by organisation id",
                "operationId": "DeliveriesByOrganisationByOrganisationIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/ByResponsible/{responsibleId}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries by responsible id",
                "operationId": "DeliveriesByResponsibleByResponsibleIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "responsibleId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/ByResponsible2/{responsibleId}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries by responsible id",
                "operationId": "DeliveriesByResponsible2ByResponsibleIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "responsibleId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/ByStatus/{status}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all deliveries by status id",
                "operationId": "DeliveriesByStatusByStatusGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "New",
                            "Planned",
                            "OnGoing",
                            "Completed",
                            "GeneralDelivery"
                        ]
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/LinkedData": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns all linked data for deliveries",
                "operationId": "DeliveriesLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Creates linked data for deliveries",
                "operationId": "DeliveriesLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Deletes all linked data for deliveries",
                "operationId": "DeliveriesLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns linked data for deliveries by id",
                "operationId": "DeliveriesLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Updates linked data for deliveries",
                "operationId": "DeliveriesLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Deletes linked data for deliveries by id",
                "operationId": "DeliveriesLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/LinkedSetup": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns linked setup for deliveries",
                "operationId": "DeliveriesLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/Hooks": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns own delivery hooks",
                "operationId": "DeliveriesHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Adds new delivery hook and returns assigned id",
                "operationId": "DeliveriesHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "deliveryHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Deliveries/Hooks/{id}": {
            "get": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Returns delivery hook with specified id",
                "operationId": "DeliveriesHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeliveryHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Updates delivery hook with specified id",
                "operationId": "DeliveriesHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "deliveryHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Deliveries"
                ],
                "summary": "Deletes delivery hook with specified id",
                "operationId": "DeliveriesHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Documents/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Returns document with specified id",
                "operationId": "DocumentsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Updates document with specified id",
                "operationId": "DocumentsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "documentDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "description": "Deletes document with specified id",
                "operationId": "DocumentsByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Documents/{id}/Download": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Returns file related to document with specified id",
                "operationId": "DocumentsByIdDownloadGet",
                "consumes": [],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File response",
                        "schema": {
                            "format": "byte",
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Returns all documents",
                "operationId": "DocumentsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Adds new document and returns assigned id",
                "operationId": "DocumentsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "documentDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Documents"
                ],
                "summary": "Updates or inserts submitted documents. Returns assigned ids for inserted documents and error messages if insert/update fails.",
                "operationId": "DocumentsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "documents",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Documents/Hooks": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Returns own document hooks",
                "operationId": "DocumentsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Adds new document hook and returns assigned id",
                "operationId": "DocumentsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "documentHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Documents/Hooks/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Returns document hook with specified id",
                "operationId": "DocumentsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DocumentHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Updates document hook with specified id",
                "operationId": "DocumentsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "documentHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Deletes document hook with specified id",
                "operationId": "DocumentsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/EmailSupports/{id}": {
            "get": {
                "tags": [
                    "EmailSupports"
                ],
                "summary": "Returns EmailSupport with specified id",
                "operationId": "EmailSupportsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SupportCaseEmailDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/EmailSupports": {
            "get": {
                "tags": [
                    "EmailSupports"
                ],
                "summary": "Returns all EmailSupports",
                "operationId": "EmailSupportsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseEmailDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns event with specified id",
                "operationId": "EventsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Updates event with specified id",
                "operationId": "EventsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ev",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all events",
                "operationId": "EventsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Adds new event",
                "operationId": "EventsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "ev",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Events"
                ],
                "summary": "Updates or inserts submitted events. Returns assigned ids for inserted events and error messages if insert/update fails.",
                "operationId": "EventsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "events",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/ByResponsible/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all events by responsible id",
                "operationId": "EventsByResponsibleByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/ByOrganisation/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all events by organisation id",
                "operationId": "EventsByOrganisationByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all events by create date (startDate <= createDate < endDate)",
                "operationId": "EventsFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/ByStatus/{status}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all events by status id",
                "operationId": "EventsByStatusByStatusGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Confirmed",
                            "Draft",
                            "Cancelled"
                        ]
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "A comma-separated list of additional fields that should be returned.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SecurityInfo"
                            ]
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/LinkedData": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns all linked data for events",
                "operationId": "EventsLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Creates linked data for events",
                "operationId": "EventsLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Deletes all linked data for events",
                "operationId": "EventsLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns linked data for events by id",
                "operationId": "EventsLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Updates linked data for events",
                "operationId": "EventsLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Deletes linked data for events by id",
                "operationId": "EventsLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/LinkedSetup": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns linked setup for events",
                "operationId": "EventsLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/Hooks": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns own event hooks",
                "operationId": "EventsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Adds new event hook and returns assigned id",
                "operationId": "EventsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "eventHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Events/Hooks/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Returns event hook with specified id",
                "operationId": "EventsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EventHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Updates event hook with specified id",
                "operationId": "EventsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "eventHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Deletes event hook with specified id",
                "operationId": "EventsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/FieldsMetadata": {
            "get": {
                "tags": [
                    "FieldsMetadata"
                ],
                "summary": "Returns all fields metadata",
                "operationId": "FieldsMetadataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldMetadataDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/FieldsMetadata/{entityTypes}": {
            "get": {
                "tags": [
                    "FieldsMetadata"
                ],
                "summary": "Returns all fields metadata by entity types",
                "operationId": "FieldsMetadataByEntityTypesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "entityTypes",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Activity",
                            "Delivery",
                            "Event",
                            "Opportunity",
                            "Organisation",
                            "Person",
                            "Product",
                            "SupportCase",
                            "User",
                            "All"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldMetadataDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Meetings": {
            "get": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Get the list of meetings for an user.",
                "description": "Date range should be less than 1 year.",
                "operationId": "MeetingsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeRecurring",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MeetingListDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Create a new meeting.",
                "description": "If you want to add MeetingPersons or MeetingUsers you have to add their`s emails to MeetingAttendeeEmails",
                "operationId": "MeetingsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "meeting",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MeetingInfoCreateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Meetings/{meetingId}": {
            "get": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Get meeting with specified meetingId.",
                "description": "Start time is required for recurrent meetings",
                "operationId": "MeetingsByMeetingIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "meetingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MeetingInfoGetByIdDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Update an existing meeting.",
                "description": "If you want to add MeetingPersons or MeetingUsers you have to add their`s emails to MeetingAttendeeEmails",
                "operationId": "MeetingsByMeetingIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "meetingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "meeting",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MeetingInfoUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Delete a meeting or recurring series.",
                "operationId": "MeetingsByMeetingIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "meetingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sendCancellations",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Meetings/{meetingId}/Connections": {
            "put": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Update the list of connected activities and opportunities.",
                "operationId": "MeetingsByMeetingIdConnectionsPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "meetingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "meeting",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MeetingInfoUpdateConnectionsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Milestones/{id}": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Returns milestone with specified id",
                "operationId": "MilestonesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MilestoneDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Milestones": {
            "get": {
                "tags": [
                    "Milestones"
                ],
                "summary": "Returns all milestones",
                "operationId": "MilestonesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MilestoneDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities",
                "operationId": "OpportunitiesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Adds new opportunity and returns assigned id",
                "operationId": "OpportunitiesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "opportunityDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OpportunityDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Updates or inserts submitted opportunities. Returns assigned ids for inserted opportunities and error messages if insert/update fails.",
                "operationId": "OpportunitiesPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "opportunities",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/{id}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns opportunity with specified id",
                "operationId": "OpportunitiesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OpportunityDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Updates opportunity with specified id",
                "operationId": "OpportunitiesByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "opportunityDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OpportunityDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/{id}/ConvertToDelivery": {
            "post": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Convert opportunity to delivery",
                "operationId": "OpportunitiesByIdConvertToDeliveryPost",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/{id}/Move": {
            "post": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Moves opportunity to organisation",
                "operationId": "OpportunitiesByIdMovePost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "moveDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MoveDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/{id}/QuotationLines": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all quotation lines by opportunity id",
                "operationId": "OpportunitiesByIdQuotationLinesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/{id}/Revenues": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Return all opportunity's revenues",
                "operationId": "OpportunitiesByIdRevenuesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RevenueDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities by create date (startDate <= createDate < endDate)",
                "operationId": "OpportunitiesFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/ByOrganisation/{organisationId}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities by organisation id",
                "operationId": "OpportunitiesByOrganisationByOrganisationIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/ByResponsible/{responsibleId}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities by responsible id",
                "operationId": "OpportunitiesByResponsibleByResponsibleIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "responsibleId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/ByResponsible2/{responsibleId}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities by user id",
                "operationId": "OpportunitiesByResponsible2ByResponsibleIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "responsibleId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/ByPipelineLevel/{pipelineLevel}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all opportunities by pipeline level",
                "operationId": "OpportunitiesByPipelineLevelByPipelineLevelGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pipelineLevel",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/LinkedData": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns all linked data for opportunities",
                "operationId": "OpportunitiesLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Creates linked data for opportunities",
                "operationId": "OpportunitiesLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Deletes all linked data for opportunities",
                "operationId": "OpportunitiesLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns linked data for opportunities by id",
                "operationId": "OpportunitiesLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Updates linked data for opportunities",
                "operationId": "OpportunitiesLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Deletes linked data for opportunities by id",
                "operationId": "OpportunitiesLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/LinkedSetup": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns linked setup for opportunities",
                "operationId": "OpportunitiesLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/Hooks": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns own opportunity hooks",
                "operationId": "OpportunitiesHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Adds new opportunity hook and returns assigned id",
                "operationId": "OpportunitiesHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "opportunityHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OpportunityHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Opportunities/Hooks/{id}": {
            "get": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Returns opportunity hook with specified id",
                "operationId": "OpportunitiesHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OpportunityHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Updates opportunity hook with specified id",
                "operationId": "OpportunitiesHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "opportunityHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OpportunityHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Opportunities"
                ],
                "summary": "Deletes opportunity hook with specified id",
                "operationId": "OpportunitiesHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns organisation with specified id",
                "operationId": "OrganisationsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Updates organisation with specified id",
                "operationId": "OrganisationsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "organisation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisations",
                "operationId": "OrganisationsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Adds new organisation",
                "operationId": "OrganisationsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "organisation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Updates or inserts submitted organisations. Returns assigned ids for inserted organisations and error messages if insert/update fails.",
                "operationId": "OrganisationsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisations",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisations by create date (startDate <= createDate < endDate)",
                "operationId": "OrganisationsFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/FindByUpdateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisations by update date (startDate <= updateDate < endDate)",
                "operationId": "OrganisationsFindByUpdateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/Events": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's events",
                "operationId": "OrganisationsByIdEventsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/SupportCases": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's support cases",
                "operationId": "OrganisationsByIdSupportCasesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/Persons": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's persons",
                "operationId": "OrganisationsByIdPersonsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/Products": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's products",
                "operationId": "OrganisationsByIdProductsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/Relations": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's relations",
                "operationId": "OrganisationsByIdRelationsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/{id}/Revenues": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all organisation's revenues",
                "operationId": "OrganisationsByIdRevenuesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RevenueDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/LinkedData": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns all linked data for organisations",
                "operationId": "OrganisationsLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Creates linked data for organisations",
                "operationId": "OrganisationsLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Deletes all linked data for organisations",
                "operationId": "OrganisationsLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns linked data for organisations by id",
                "operationId": "OrganisationsLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Updates linked data for organisations",
                "operationId": "OrganisationsLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Deletes linked data for organisations by id",
                "operationId": "OrganisationsLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/LinkedSetup": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns linked setup for organisations",
                "operationId": "OrganisationsLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/Hooks": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns own organisation hooks",
                "operationId": "OrganisationsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Adds new organisation hook and returns assigned id",
                "operationId": "OrganisationsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisationHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Organisations/Hooks/{id}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Returns organisation hook with specified id",
                "operationId": "OrganisationsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganisationHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Updates organisation hook with specified id",
                "operationId": "OrganisationsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "organisationHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Deletes organisation hook with specified id",
                "operationId": "OrganisationsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/{id}": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns person with specified id",
                "operationId": "PersonsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PersonDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Persons"
                ],
                "summary": "Updates person with specified id",
                "operationId": "PersonsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns all persons",
                "operationId": "PersonsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Adds new person and returns assigned id",
                "operationId": "PersonsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "person",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Persons"
                ],
                "summary": "Updates or inserts submitted persons. Returns assigned ids for inserted persons and error messages if insert/update fails.",
                "operationId": "PersonsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "persons",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/{id}/Relations": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns all person's relations",
                "operationId": "PersonsByIdRelationsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/LinkedData": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns all linked data for persons",
                "operationId": "PersonsLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Creates linked data for persons",
                "operationId": "PersonsLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Persons"
                ],
                "summary": "Deletes all linked data for persons",
                "operationId": "PersonsLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns linked data for persons by id",
                "operationId": "PersonsLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Persons"
                ],
                "summary": "Updates linked data for persons",
                "operationId": "PersonsLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Persons"
                ],
                "summary": "Deletes linked data for persons by id",
                "operationId": "PersonsLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/LinkedSetup": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns linked setup for persons",
                "operationId": "PersonsLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/Hooks": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns own person hooks",
                "operationId": "PersonsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Adds new person hook and returns assigned id",
                "operationId": "PersonsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "personHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Persons/Hooks/{id}": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Returns person hook with specified id",
                "operationId": "PersonsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PersonHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Persons"
                ],
                "summary": "Updates person hook with specified id",
                "operationId": "PersonsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "personHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Persons"
                ],
                "summary": "Deletes person hook with specified id",
                "operationId": "PersonsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/{id}": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns person with specified id",
                "operationId": "PersonsB2CByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PersonB2CDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Updates person with specified id",
                "operationId": "PersonsB2CByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonB2CDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns all persons",
                "operationId": "PersonsB2CGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonB2CDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Adds new person and returns assigned id",
                "operationId": "PersonsB2CPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "person",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonB2CDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Updates or inserts submitted persons. Returns assigned ids for inserted persons and error messages if insert/update fails.",
                "operationId": "PersonsB2CPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "persons",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonB2CDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/{id}/Relations": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns all person's relations",
                "operationId": "PersonsB2CByIdRelationsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/LinkedData": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns all linked data for persons",
                "operationId": "PersonsB2CLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Creates linked data for persons",
                "operationId": "PersonsB2CLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Deletes all linked data for persons",
                "operationId": "PersonsB2CLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/LinkedData/{id}": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns linked data for persons by id",
                "operationId": "PersonsB2CLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Updates linked data for persons",
                "operationId": "PersonsB2CLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Deletes linked data for persons by id",
                "operationId": "PersonsB2CLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/LinkedSetup": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns linked setup for persons",
                "operationId": "PersonsB2CLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/Hooks": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns own personB2C hooks",
                "operationId": "PersonsB2CHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersonB2CHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Adds new personB2C hook and returns assigned id",
                "operationId": "PersonsB2CHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "personHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonB2CHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/PersonsB2C/Hooks/{id}": {
            "get": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Returns personB2C hook with specified id",
                "operationId": "PersonsB2CHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PersonB2CHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Updates personB2C hook with specified id",
                "operationId": "PersonsB2CHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "personHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonB2CHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PersonsB2C"
                ],
                "summary": "Deletes personB2C hook with specified id",
                "operationId": "PersonsB2CHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns product with specified id",
                "operationId": "ProductsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ProductDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates product with specified id",
                "operationId": "ProductsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "product",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Deletes product with specified id",
                "operationId": "ProductsByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns all products",
                "operationId": "ProductsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Adds new product and returns assigned id",
                "operationId": "ProductsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "productDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates or inserts submitted products. Returns assigned ids for inserted products and error messages if insert/update fails.",
                "operationId": "ProductsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "products",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/LinkedData": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns all linked data for products",
                "operationId": "ProductsLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Creates linked data for products",
                "operationId": "ProductsLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Deletes all linked data for products",
                "operationId": "ProductsLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/LinkedData/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns linked data for products by id",
                "operationId": "ProductsLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates linked data for products",
                "operationId": "ProductsLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Deletes linked data for products by id",
                "operationId": "ProductsLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/LinkedSetup": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns linked setup for products",
                "operationId": "ProductsLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/Hooks": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns own product hooks",
                "operationId": "ProductsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Adds new product hook and returns assigned id",
                "operationId": "ProductsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "productHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Products/Hooks/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns product hook with specified id",
                "operationId": "ProductsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ProductHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates product hook with specified id",
                "operationId": "ProductsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "productHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Deletes product hook with specified id",
                "operationId": "ProductsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/{id}": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns quotation line with specified id",
                "operationId": "QuotationLinesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/QuotationLineDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Updates quotation line with specified id",
                "operationId": "QuotationLinesByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "quotationLineDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Deletes quotation line with specified id",
                "operationId": "QuotationLinesByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Return all quotation lines",
                "operationId": "QuotationLinesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Adds new quotation line and returns assigned id",
                "operationId": "QuotationLinesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "quotationLineDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Updates or inserts submitted quotation lines. Returns assigned ids for inserted quotation lines and error messages if insert/update fails.",
                "operationId": "QuotationLinesPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "quotationLines",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineUpdateDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/LinkedData": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns all linked data for quotation lines",
                "operationId": "QuotationLinesLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineLinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Creates linked data for quotation lines",
                "operationId": "QuotationLinesLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineLinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Deletes all linked data for quotation lines",
                "operationId": "QuotationLinesLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/LinkedData/{id}": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns linked data for quotation lines by id",
                "operationId": "QuotationLinesLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/QuotationLineLinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Updates linked data for quotation lines",
                "operationId": "QuotationLinesLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineLinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Deletes linked data for quotation lines by id",
                "operationId": "QuotationLinesLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/LinkedSetup": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns linked setup for quotation lines",
                "operationId": "QuotationLinesLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/QuotationLineLinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/Hooks": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns own quotation line hooks",
                "operationId": "QuotationLinesHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotationLineHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Adds new quotation line hook and returns assigned id",
                "operationId": "QuotationLinesHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "quotationLineHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/QuotationLines/Hooks/{id}": {
            "get": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Returns quotation line hook with specified id",
                "operationId": "QuotationLinesHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/QuotationLineHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Updates quotation line hook with specified id",
                "operationId": "QuotationLinesHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "quotationLineHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/QuotationLineHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QuotationLines"
                ],
                "summary": "Deletes quotation line hook with specified id",
                "operationId": "QuotationLinesHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Relations/{id}": {
            "get": {
                "tags": [
                    "Relations"
                ],
                "summary": "Returns relation with specified id",
                "operationId": "RelationsByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RelationDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Relations"
                ],
                "summary": "Updates relation with specified id",
                "operationId": "RelationsByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "relation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RelationDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Relations": {
            "get": {
                "tags": [
                    "Relations"
                ],
                "summary": "Returns all relations",
                "operationId": "RelationsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Relations"
                ],
                "summary": "Adds new relation and returns assigned id",
                "operationId": "RelationsPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "relation",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RelationDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Relations"
                ],
                "summary": "Updates or inserts submitted relations. Returns assigned ids for inserted relations and error messages if insert/update fails.",
                "operationId": "RelationsPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "relations",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Relations/Hooks": {
            "get": {
                "tags": [
                    "Relations"
                ],
                "summary": "Returns own relation hooks",
                "operationId": "RelationsHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RelationHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Relations"
                ],
                "summary": "Adds new relation hook and returns assigned id",
                "operationId": "RelationsHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "relationHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RelationHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Relations/Hooks/{id}": {
            "get": {
                "tags": [
                    "Relations"
                ],
                "summary": "Returns relation hook with specified id",
                "operationId": "RelationsHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RelationHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Relations"
                ],
                "summary": "Updates relation hook with specified id",
                "operationId": "RelationsHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "relationHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RelationHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Relations"
                ],
                "summary": "Deletes relation hook with specified id",
                "operationId": "RelationsHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Revenues/{id}": {
            "get": {
                "tags": [
                    "Revenues"
                ],
                "summary": "Returns revenue with specified id",
                "operationId": "RevenuesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RevenueDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Revenues": {
            "get": {
                "tags": [
                    "Revenues"
                ],
                "summary": "Returns all revenues",
                "operationId": "RevenuesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RevenueDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/{id}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns support case with specified id",
                "operationId": "SupportCasesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SupportCaseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Updates support case with specified id",
                "operationId": "SupportCasesByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supportCaseDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupportCaseDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases",
                "operationId": "SupportCasesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Adds new support case and returns assigned id",
                "operationId": "SupportCasesPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "supportCaseDTO",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupportCaseDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Updates or inserts submitted support cases. Returns assigned ids for inserted support cases and error messages if insert/update fails.",
                "operationId": "SupportCasesPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "supportCases",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/ByResponsible/{responsibleId}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases by responsible id",
                "operationId": "SupportCasesByResponsibleByResponsibleIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "responsibleId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/ByOrganisation/{organisationId}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases by organisation id",
                "operationId": "SupportCasesByOrganisationByOrganisationIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "organisationId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/FindByCreateDates/{startDate}/{endDate}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases by create date (startDate <= createDate < endDate)",
                "operationId": "SupportCasesFindByCreateDatesByStartDateByEndDateGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/ByStatus/{status}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases by status",
                "operationId": "SupportCasesByStatusByStatusGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Created",
                            "Ongoing",
                            "Closed"
                        ]
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/ByChannel/{channel}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all support cases by channel",
                "operationId": "SupportCasesByChannelByChannelGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "channel",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/AllActive": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all active support cases",
                "operationId": "SupportCasesAllActiveGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/LinkedData": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns all linked data for support cases",
                "operationId": "SupportCasesLinkedDataGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkedDataItemDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Creates linked data for support cases",
                "operationId": "SupportCasesLinkedDataPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Deletes all linked data for support cases",
                "operationId": "SupportCasesLinkedDataDelete",
                "consumes": [],
                "produces": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/LinkedData/{id}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns linked data for support cases by id",
                "operationId": "SupportCasesLinkedDataByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Updates linked data for support cases",
                "operationId": "SupportCasesLinkedDataByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "linkedDataItemDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LinkedDataItemDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Deletes linked data for support cases by id",
                "operationId": "SupportCasesLinkedDataByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/LinkedSetup": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns linked setup for support cases",
                "operationId": "SupportCasesLinkedSetupGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LinkedSetupDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/Hooks": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns own support case hooks",
                "operationId": "SupportCasesHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupportCaseHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Adds new support case hook and returns assigned id",
                "operationId": "SupportCasesHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "supportCaseHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupportCaseHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/SupportCases/Hooks/{id}": {
            "get": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Returns support case hook with specified id",
                "operationId": "SupportCasesHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SupportCaseHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Updates support case hook with specified id",
                "operationId": "SupportCasesHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "supportCaseHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupportCaseHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SupportCases"
                ],
                "summary": "Deletes support case hook with specified id",
                "operationId": "SupportCasesHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/TimeExpenses/{id}": {
            "get": {
                "tags": [
                    "TimeExpenses"
                ],
                "summary": "Returns TimeExpense with specified id",
                "operationId": "TimeExpensesByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeExpenseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/TimeExpenses": {
            "get": {
                "tags": [
                    "TimeExpenses"
                ],
                "summary": "Returns all TimeExpenses",
                "operationId": "TimeExpensesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeExpenseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns user with specified id",
                "operationId": "UsersByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates user with specified id",
                "operationId": "UsersByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all users",
                "operationId": "UsersGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds new user and returns assigned id",
                "operationId": "UsersPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates or inserts submitted users. Returns assigned ids for inserted users and error messages if insert/update fails.",
                "operationId": "UsersPatch",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "users",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/{id}/Activities": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all user's activities",
                "operationId": "UsersByIdActivitiesGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/{id}/Events": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all user's events",
                "operationId": "UsersByIdEventsGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/AllActive": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns active users",
                "operationId": "UsersAllActiveGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/Hooks": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns own user hooks",
                "operationId": "UsersHooksGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000000,
                        "minimum": 1
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserHookDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds new user hook and returns assigned id",
                "operationId": "UsersHooksPost",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/Users/Hooks/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns user hook with specified id",
                "operationId": "UsersHooksByIdGet",
                "consumes": [],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserHookDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates user hook with specified id",
                "operationId": "UsersHooksByIdPut",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userHookDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserHookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes user hook with specified id",
                "operationId": "UsersHooksByIdDelete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "ActivityDto": {
            "required": [
                "ActivityId"
            ],
            "type": "object",
            "properties": {
                "ActivityAction": {
                    "type": "string"
                },
                "ActivityAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityAutoCompleteMode": {
                    "enum": [
                        "None",
                        "Complete",
                        "Delete"
                    ],
                    "type": "string"
                },
                "ActivityCampaignDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ActivityCampaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityCampaignResult": {
                    "type": "string"
                },
                "ActivityClientName": {
                    "type": "string"
                },
                "ActivityClientTelephone": {
                    "type": "string"
                },
                "ActivityComment": {
                    "type": "string"
                },
                "ActivityCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "ActivityCreatedBy": {
                    "type": "string"
                },
                "ActivityDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ActivityDescription": {
                    "type": "string"
                },
                "ActivityEventId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityNote": {
                    "type": "string"
                },
                "ActivityOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityOutlookSync": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityPersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ActivityProduct": {
                    "type": "string"
                },
                "ActivityStatus": {
                    "enum": [
                        "Planned",
                        "Active",
                        "Completed"
                    ],
                    "type": "string"
                },
                "ActivityType": {
                    "type": "string"
                },
                "ActivityUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "ActivityUpdatedBy": {
                    "type": "string"
                },
                "ActivitySecurityInfo": {
                    "$ref": "#/definitions/SecurityInfoDto"
                },
                "ActivityPlus1": {
                    "type": "string"
                },
                "ActivityPlus2": {
                    "type": "string"
                },
                "ActivityPlus3": {
                    "type": "string"
                },
                "ActivityPlus4": {
                    "type": "string"
                },
                "ActivityPlus5": {
                    "type": "string"
                },
                "ActivityPlus6": {
                    "type": "string"
                },
                "ActivityPlus7": {
                    "type": "string"
                },
                "ActivityPlus8": {
                    "type": "string"
                },
                "ActivityPlus9": {
                    "type": "string"
                },
                "ActivityPlus10": {
                    "type": "string"
                },
                "ActivityPlus11": {
                    "type": "string"
                },
                "ActivityPlus12": {
                    "type": "string"
                },
                "ActivityPlus13": {
                    "type": "string"
                },
                "ActivityPlus14": {
                    "type": "string"
                },
                "ActivityPlus15": {
                    "type": "string"
                },
                "ActivityPlus16": {
                    "type": "string"
                },
                "ActivityPlus17": {
                    "type": "string"
                },
                "ActivityPlus18": {
                    "type": "string"
                },
                "ActivityPlus19": {
                    "type": "string"
                },
                "ActivityPlus20": {
                    "type": "string"
                },
                "ActivityCustom1": {
                    "type": "string"
                },
                "ActivityCustom2": {
                    "type": "string"
                },
                "ActivityCustom3": {
                    "type": "string"
                },
                "ActivityCustom4": {
                    "type": "string"
                },
                "ActivityCustom5": {
                    "type": "string"
                },
                "ActivityCustom6": {
                    "type": "string"
                },
                "ActivityCustom7": {
                    "type": "string"
                },
                "ActivityCustom8": {
                    "type": "string"
                },
                "ActivityCustom9": {
                    "type": "string"
                },
                "ActivityCustom10": {
                    "type": "string"
                },
                "ActivityCustom11": {
                    "type": "string"
                },
                "ActivityCustom12": {
                    "type": "string"
                },
                "ActivityCustom13": {
                    "type": "string"
                },
                "ActivityCustom14": {
                    "type": "string"
                },
                "ActivityCustom15": {
                    "type": "string"
                },
                "ActivityMemo": {
                    "type": "string"
                }
            }
        },
        "SecurityInfoDto": {
            "type": "object",
            "properties": {
                "CanEdit": {
                    "type": "boolean"
                }
            }
        },
        "MoveDto": {
            "required": [
                "NewOrganisationId"
            ],
            "type": "object",
            "properties": {
                "NewOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ActivityNoteDto": {
            "type": "object",
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Comment": {
                    "type": "string"
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "DateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonName": {
                    "type": "string"
                },
                "StatusText": {
                    "type": "string"
                }
            }
        },
        "CreateActivityNoteDto": {
            "type": "object",
            "properties": {
                "Comment": {
                    "type": "string"
                }
            }
        },
        "LinkedDataItemDto": {
            "required": [
                "LinkedDataItemId"
            ],
            "type": "object",
            "properties": {
                "LinkedDataItemData1": {
                    "type": "string"
                },
                "LinkedDataItemData2": {
                    "type": "string"
                },
                "LinkedDataItemData3": {
                    "type": "string"
                },
                "LinkedDataItemData4": {
                    "type": "string"
                },
                "LinkedDataItemData5": {
                    "type": "string"
                },
                "LinkedDataItemData6": {
                    "type": "string"
                },
                "LinkedDataItemData7": {
                    "type": "string"
                },
                "LinkedDataItemData8": {
                    "type": "string"
                },
                "LinkedDataItemData9": {
                    "type": "string"
                },
                "LinkedDataItemDataMemo": {
                    "type": "string"
                },
                "LinkedDataItemEntityType": {
                    "enum": [
                        "Undefined",
                        "Organisation",
                        "Person",
                        "Activity",
                        "Meeting",
                        "Opportunity",
                        "Delivery",
                        "Product",
                        "SupportCase",
                        "SupportFaq"
                    ],
                    "type": "string"
                },
                "LinkedDataItemId": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedDataItemItemGroup": {
                    "type": "string"
                },
                "LinkedDataItemPrice": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "LinkedSetupDto": {
            "required": [
                "LinkedSetupId"
            ],
            "type": "object",
            "properties": {
                "LinkedSetupEntityType": {
                    "enum": [
                        "Undefined",
                        "Organisation",
                        "Person",
                        "Activity",
                        "Meeting",
                        "Opportunity",
                        "Delivery",
                        "Product",
                        "SupportCase",
                        "SupportFaq"
                    ],
                    "type": "string"
                },
                "LinkedSetupField1": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField2": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField3": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField4": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField5": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField6": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField7": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField8": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupField9": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupIsUniqueValueRequired": {
                    "type": "boolean"
                },
                "LinkedSetupLinkMode": {
                    "enum": [
                        "Regular",
                        "Multiselect"
                    ],
                    "type": "string"
                },
                "LinkedSetupLookupMode": {
                    "enum": [
                        "DropdownLists",
                        "FreeTextSearch"
                    ],
                    "type": "string"
                },
                "LinkedSetupMemoField": {
                    "format": "int32",
                    "type": "integer"
                },
                "LinkedSetupUseItemGroup": {
                    "type": "boolean"
                }
            }
        },
        "ActivityHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Responsible",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "TokenResponseDto": {
            "type": "object",
            "properties": {
                "AccessToken": {
                    "type": "string"
                },
                "RefreshToken": {
                    "type": "string"
                },
                "Error": {
                    "type": "string"
                },
                "ErrorDescription": {
                    "type": "string"
                },
                "IsError": {
                    "type": "boolean"
                },
                "ExpiresIn": {
                    "format": "int64",
                    "type": "integer"
                },
                "TokenType": {
                    "type": "string"
                }
            }
        },
        "TokenResponseWithUserIdDto": {
            "type": "object",
            "properties": {
                "UserId": {
                    "format": "int32",
                    "type": "integer"
                },
                "AccessToken": {
                    "type": "string"
                },
                "RefreshToken": {
                    "type": "string"
                },
                "Error": {
                    "type": "string"
                },
                "ErrorDescription": {
                    "type": "string"
                },
                "IsError": {
                    "type": "boolean"
                },
                "ExpiresIn": {
                    "format": "int64",
                    "type": "integer"
                },
                "TokenType": {
                    "type": "string"
                }
            }
        },
        "BudgetDto": {
            "required": [
                "BudgetId"
            ],
            "type": "object",
            "properties": {
                "BudgetAccessLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetComment": {
                    "type": "string"
                },
                "BudgetCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "BudgetCreatedBy": {
                    "type": "string"
                },
                "BudgetCurrencyName": {
                    "type": "string"
                },
                "BudgetDisplayOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue1": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue2": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue3": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue4": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue5": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue6": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue7": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue8": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue9": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue10": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue11": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenue12": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetGmRevenueNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetLanguageId": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetMonthCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetName": {
                    "type": "string"
                },
                "BudgetPrecision": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRefIdNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRefIdText": {
                    "type": "string"
                },
                "BudgetRevenue1": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue2": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue3": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue4": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue5": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue6": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue7": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue8": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue9": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue10": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue11": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenue12": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenueNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetRevenueType": {
                    "enum": [
                        "Undefined",
                        "Revenue",
                        "SplitRevenue"
                    ],
                    "type": "string"
                },
                "BudgetStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BudgetTerritoryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetType": {
                    "enum": [
                        "Undefined",
                        "Opportunity1stResponsible",
                        "Opportunity2ndResponsible",
                        "Opportunity1stOr2ndResponsible",
                        "Organisation1stResponsible",
                        "Organisation2ndResponsible",
                        "Organisation1stOr2ndResponsible",
                        "OrganisationTerritory",
                        "OrganisationType",
                        "OrganisationIndustry",
                        "SpecificOrganisation",
                        "OpportunityMainProductService",
                        "OpportunitySearchLabel1",
                        "OpportunitySearchLabel2",
                        "AllOpportunitiesAndDeliveries"
                    ],
                    "type": "string"
                },
                "BudgetUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "BudgetUpdatedBy": {
                    "type": "string"
                },
                "BudgetUserGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "BudgetUserId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DeliveryDto": {
            "required": [
                "DeliveryId"
            ],
            "type": "object",
            "properties": {
                "DeliveryAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryAssignedTo2": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryComment": {
                    "type": "string"
                },
                "DeliveryCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryCreatedBy": {
                    "type": "string"
                },
                "DeliveryCurrencyName": {
                    "type": "string"
                },
                "DeliveryDescription": {
                    "type": "string"
                },
                "DeliveryDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryErpId": {
                    "type": "string"
                },
                "DeliveryErpReadOnly": {
                    "type": "string"
                },
                "DeliveryErpStatus": {
                    "enum": [
                        "NotReadyForSynchronization",
                        "ReadyForSynchronization",
                        "Synchronized"
                    ],
                    "type": "string"
                },
                "DeliveryErpSyncDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryGmRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryGmRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryHistory": {
                    "type": "string"
                },
                "DeliveryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryNextFollowUp": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryNote": {
                    "type": "string"
                },
                "DeliveryNumber": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom1": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom2": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom3": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom4": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom5": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom6": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom7": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom8": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom9": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom10": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom11": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom12": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom13": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom14": {
                    "type": "string"
                },
                "DeliveryOpportunityCustom15": {
                    "type": "string"
                },
                "DeliveryOpportunityMemo": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus1": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus2": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus3": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus4": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus5": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus6": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus7": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus8": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus9": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus10": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus11": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus12": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus13": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus14": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus15": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus16": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus17": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus18": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus19": {
                    "type": "string"
                },
                "DeliveryOpportunityPlus20": {
                    "type": "string"
                },
                "DeliveryOrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryOrderGmValue": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryOrderValue": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryPercent": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryPersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryProduct": {
                    "type": "string"
                },
                "DeliveryProductId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryQuotationLanguageId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryResponsible": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "DeliveryRisk": {
                    "enum": [
                        "NoRisk",
                        "Small",
                        "Medium",
                        "High",
                        "Crises"
                    ],
                    "type": "string"
                },
                "DeliverySearch1": {
                    "type": "string"
                },
                "DeliverySearch2": {
                    "type": "string"
                },
                "DeliverySpentTime": {
                    "type": "string"
                },
                "DeliveryStatus": {
                    "enum": [
                        "New",
                        "Planned",
                        "OnGoing",
                        "Completed",
                        "GeneralDelivery"
                    ],
                    "type": "string"
                },
                "DeliveryType": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryUpdatedBy": {
                    "type": "string"
                },
                "DeliveryUserGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryWinPercent": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryWinPercent2": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeliveryWinYesNo": {
                    "type": "boolean"
                },
                "DeliveryWonDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeliveryPlus1": {
                    "type": "string"
                },
                "DeliveryPlus2": {
                    "type": "string"
                },
                "DeliveryPlus3": {
                    "type": "string"
                },
                "DeliveryPlus4": {
                    "type": "string"
                },
                "DeliveryPlus5": {
                    "type": "string"
                },
                "DeliveryPlus6": {
                    "type": "string"
                },
                "DeliveryPlus7": {
                    "type": "string"
                },
                "DeliveryPlus8": {
                    "type": "string"
                },
                "DeliveryPlus9": {
                    "type": "string"
                },
                "DeliveryPlus10": {
                    "type": "string"
                },
                "DeliveryPlus11": {
                    "type": "string"
                },
                "DeliveryPlus12": {
                    "type": "string"
                },
                "DeliveryPlus13": {
                    "type": "string"
                },
                "DeliveryPlus14": {
                    "type": "string"
                },
                "DeliveryPlus15": {
                    "type": "string"
                },
                "DeliveryPlus16": {
                    "type": "string"
                },
                "DeliveryPlus17": {
                    "type": "string"
                },
                "DeliveryPlus18": {
                    "type": "string"
                },
                "DeliveryPlus19": {
                    "type": "string"
                },
                "DeliveryPlus20": {
                    "type": "string"
                },
                "DeliveryCustom1": {
                    "type": "string"
                },
                "DeliveryCustom2": {
                    "type": "string"
                },
                "DeliveryCustom3": {
                    "type": "string"
                },
                "DeliveryCustom4": {
                    "type": "string"
                },
                "DeliveryCustom5": {
                    "type": "string"
                },
                "DeliveryCustom6": {
                    "type": "string"
                },
                "DeliveryCustom7": {
                    "type": "string"
                },
                "DeliveryCustom8": {
                    "type": "string"
                },
                "DeliveryCustom9": {
                    "type": "string"
                },
                "DeliveryCustom10": {
                    "type": "string"
                },
                "DeliveryCustom11": {
                    "type": "string"
                },
                "DeliveryCustom12": {
                    "type": "string"
                },
                "DeliveryCustom13": {
                    "type": "string"
                },
                "DeliveryCustom14": {
                    "type": "string"
                },
                "DeliveryCustom15": {
                    "type": "string"
                },
                "DeliveryMemo": {
                    "type": "string"
                }
            }
        },
        "QuotationLineDto": {
            "required": [
                "QuotationLineId"
            ],
            "type": "object",
            "properties": {
                "QuotationLineComment": {
                    "type": "string"
                },
                "QuotationLineCostPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "QuotationLineCreatedBy": {
                    "type": "string"
                },
                "QuotationLineData1": {
                    "type": "string"
                },
                "QuotationLineData2": {
                    "type": "string"
                },
                "QuotationLineData3": {
                    "type": "string"
                },
                "QuotationLineData4": {
                    "type": "string"
                },
                "QuotationLineData5": {
                    "type": "string"
                },
                "QuotationLineData6": {
                    "type": "string"
                },
                "QuotationLineData7": {
                    "type": "string"
                },
                "QuotationLineData8": {
                    "type": "string"
                },
                "QuotationLineData9": {
                    "type": "string"
                },
                "QuotationLineDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineMemo": {
                    "type": "string"
                },
                "QuotationLineOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLinePersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLinePrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineQuantity": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineStockStatus": {
                    "type": "string"
                },
                "QuotationLineUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "QuotationLineUpdatedBy": {
                    "type": "string"
                },
                "QuotationLineVatPercentage": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "DeliveryHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Responsible",
                            "Responsible2",
                            "Responsible3",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "DocumentDto": {
            "required": [
                "DocumentId"
            ],
            "type": "object",
            "properties": {
                "DocumentId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentCampaignPublic": {
                    "type": "string"
                },
                "DocumentCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "DocumentCreatedBy": {
                    "type": "string"
                },
                "DocumentDescription": {
                    "type": "string"
                },
                "DocumentFile": {
                    "type": "string"
                },
                "DocumentFileCode": {
                    "type": "string"
                },
                "DocumentFileExtension": {
                    "type": "string"
                },
                "DocumentFileName": {
                    "type": "string"
                },
                "DocumentFileSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentFolder": {
                    "type": "string"
                },
                "DocumentIsAllowedAsAttachment": {
                    "type": "boolean"
                },
                "DocumentLanguageCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentLastUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "DocumentLastUpdatedBy": {
                    "type": "string"
                },
                "DocumentLinkedEntityType": {
                    "enum": [
                        "Undefined",
                        "Organisation",
                        "Person",
                        "Activity",
                        "Product",
                        "Opportunity",
                        "Delivery",
                        "Meeting",
                        "Support"
                    ],
                    "type": "string"
                },
                "DocumentLinkedEntityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentPublicLink": {
                    "type": "string"
                },
                "DocumentTerritory": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentUserGroup": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentUserId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DocumentUploadedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "DocumentUploadCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DocumentHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "SupportCaseEmailDto": {
            "required": [
                "EmailSupportId"
            ],
            "type": "object",
            "properties": {
                "EmailSupportAttachmentsString": {
                    "type": "string"
                },
                "EmailSupportBody": {
                    "type": "string"
                },
                "EmailSupportDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "EmailSupportDirection": {
                    "enum": [
                        "Outbound",
                        "Inbound"
                    ],
                    "type": "string"
                },
                "EmailSupportId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EmailSupportOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EmailSupportSenderId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EmailSupportSenderName": {
                    "type": "string"
                },
                "EmailSupportSubject": {
                    "type": "string"
                },
                "EmailSupportSupportCaseId": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "EventDto": {
            "required": [
                "EventId"
            ],
            "type": "object",
            "properties": {
                "EventAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventComment": {
                    "type": "string"
                },
                "EventCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "EventCreatedBy": {
                    "type": "string"
                },
                "EventDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "EventDescription": {
                    "type": "string"
                },
                "EventDuration": {
                    "type": "string"
                },
                "EventGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventHistory": {
                    "type": "string"
                },
                "EventId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventLocation": {
                    "enum": [
                        "Out",
                        "Home"
                    ],
                    "type": "string"
                },
                "EventOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventOtherParticipates": {
                    "type": "string"
                },
                "EventOutlookSync": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventParticipantIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "EventPersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventSite": {
                    "type": "string"
                },
                "EventStatus": {
                    "enum": [
                        "Confirmed",
                        "Draft",
                        "Cancelled"
                    ],
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Meeting",
                        "Private",
                        "Private24",
                        "PrivateDayOff",
                        "Holiday"
                    ],
                    "type": "string"
                },
                "EventUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "EventUpdatedBy": {
                    "type": "string"
                },
                "EventSecurityInfo": {
                    "$ref": "#/definitions/SecurityInfoDto"
                },
                "EventPlus1": {
                    "type": "string"
                },
                "EventPlus2": {
                    "type": "string"
                },
                "EventPlus3": {
                    "type": "string"
                },
                "EventPlus4": {
                    "type": "string"
                },
                "EventPlus5": {
                    "type": "string"
                },
                "EventPlus6": {
                    "type": "string"
                },
                "EventPlus7": {
                    "type": "string"
                },
                "EventPlus8": {
                    "type": "string"
                },
                "EventPlus9": {
                    "type": "string"
                },
                "EventPlus10": {
                    "type": "string"
                },
                "EventPlus11": {
                    "type": "string"
                },
                "EventPlus12": {
                    "type": "string"
                },
                "EventPlus13": {
                    "type": "string"
                },
                "EventPlus14": {
                    "type": "string"
                },
                "EventPlus15": {
                    "type": "string"
                },
                "EventPlus16": {
                    "type": "string"
                },
                "EventPlus17": {
                    "type": "string"
                },
                "EventPlus18": {
                    "type": "string"
                },
                "EventPlus19": {
                    "type": "string"
                },
                "EventPlus20": {
                    "type": "string"
                },
                "EventCustom1": {
                    "type": "string"
                },
                "EventCustom2": {
                    "type": "string"
                },
                "EventCustom3": {
                    "type": "string"
                },
                "EventCustom4": {
                    "type": "string"
                },
                "EventCustom5": {
                    "type": "string"
                },
                "EventCustom6": {
                    "type": "string"
                },
                "EventCustom7": {
                    "type": "string"
                },
                "EventCustom8": {
                    "type": "string"
                },
                "EventCustom9": {
                    "type": "string"
                },
                "EventCustom10": {
                    "type": "string"
                },
                "EventCustom11": {
                    "type": "string"
                },
                "EventCustom12": {
                    "type": "string"
                },
                "EventCustom13": {
                    "type": "string"
                },
                "EventCustom14": {
                    "type": "string"
                },
                "EventCustom15": {
                    "type": "string"
                },
                "EventMemo": {
                    "type": "string"
                }
            }
        },
        "EventHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "EventParticipant",
                            "EventResponsible",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "FieldMetadataDto": {
            "type": "object",
            "properties": {
                "FieldMetadataDbFieldName": {
                    "type": "string"
                },
                "FieldMetadataFriendlyFieldName": {
                    "type": "string"
                },
                "FieldMetadataId": {
                    "format": "int32",
                    "type": "integer"
                },
                "FieldMetadataLabel": {
                    "type": "string"
                },
                "FieldMetadataSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "FieldMetadataDisplayType": {
                    "enum": [
                        "C",
                        "CPL",
                        "D",
                        "DA",
                        "DAT",
                        "DI",
                        "DT",
                        "DTGMT",
                        "EMA",
                        "GM",
                        "HM",
                        "HTML",
                        "HX",
                        "I",
                        "IC",
                        "IS",
                        "L",
                        "LOGA",
                        "LOGP",
                        "M",
                        "ML",
                        "NONE",
                        "PI",
                        "R",
                        "REV",
                        "SD",
                        "SDI",
                        "T",
                        "TELE",
                        "TM",
                        "UI",
                        "KPI"
                    ],
                    "type": "string"
                },
                "FieldMetadataTextFieldMaxLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "FieldMetadataDropdownListData": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldMetadataDropdownListDto"
                    }
                }
            }
        },
        "FieldMetadataDropdownListDto": {
            "type": "object",
            "properties": {
                "Text": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "MeetingListDto": {
            "required": [
                "Meetings"
            ],
            "type": "object",
            "properties": {
                "Meetings": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingInfoGetAllDto"
                    }
                }
            }
        },
        "MeetingInfoGetAllDto": {
            "required": [
                "MeetingSource",
                "MeetingUserId",
                "MeetingId",
                "MeetingIsRecurring",
                "MeetingIsCancelled",
                "MeetingCreated",
                "MeetingUpdated",
                "MeetingUpdatedBy",
                "MeetingOrganisations",
                "MeetingAttendees",
                "MeetingSubject",
                "MeetingStart",
                "MeetingEnd"
            ],
            "type": "object",
            "properties": {
                "MeetingSource": {
                    "enum": [
                        "Exchange",
                        "WebCRM",
                        "Google"
                    ],
                    "type": "string"
                },
                "MeetingUserId": {
                    "type": "string"
                },
                "MeetingId": {
                    "type": "string"
                },
                "MeetingIsRecurring": {
                    "type": "boolean"
                },
                "MeetingIsCancelled": {
                    "type": "boolean"
                },
                "MeetingCreated": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingUpdatedBy": {
                    "type": "string"
                },
                "MeetingOrganisations": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganisationInfoDto"
                    }
                },
                "MeetingCreatedBy": {
                    "type": "string"
                },
                "MeetingAttendees": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttendeeInfo"
                    }
                },
                "MeetingActivities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingActivity"
                    }
                },
                "MeetingOpportunities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingOpportunity"
                    }
                },
                "MeetingSubject": {
                    "type": "string"
                },
                "MeetingStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingIsAllDayMeeting": {
                    "type": "boolean"
                },
                "MeetingIsPrivate": {
                    "type": "boolean"
                },
                "MeetingLocation": {
                    "type": "string"
                },
                "MeetingPlus1": {
                    "type": "string"
                },
                "MeetingPlus2": {
                    "type": "string"
                },
                "MeetingPlus3": {
                    "type": "string"
                },
                "MeetingPlus4": {
                    "type": "string"
                },
                "MeetingPlus5": {
                    "type": "string"
                },
                "MeetingPlus6": {
                    "type": "string"
                },
                "MeetingPlus7": {
                    "type": "string"
                },
                "MeetingPlus8": {
                    "type": "string"
                },
                "MeetingPlus9": {
                    "type": "string"
                },
                "MeetingPlus10": {
                    "type": "string"
                },
                "MeetingPlus11": {
                    "type": "string"
                },
                "MeetingPlus12": {
                    "type": "string"
                },
                "MeetingPlus13": {
                    "type": "string"
                },
                "MeetingPlus14": {
                    "type": "string"
                },
                "MeetingPlus15": {
                    "type": "string"
                },
                "MeetingPlus16": {
                    "type": "string"
                },
                "MeetingPlus17": {
                    "type": "string"
                },
                "MeetingPlus18": {
                    "type": "string"
                },
                "MeetingPlus19": {
                    "type": "string"
                },
                "MeetingPlus20": {
                    "type": "string"
                }
            }
        },
        "OrganisationInfoDto": {
            "required": [
                "OrganisationId"
            ],
            "type": "object",
            "properties": {
                "OrganisationId": {
                    "type": "string"
                }
            }
        },
        "AttendeeInfo": {
            "required": [
                "Email",
                "Status",
                "Required",
                "UserId",
                "UserName",
                "PersonId",
                "PersonName",
                "OrganizationId",
                "OrganizationName"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "Unknown",
                        "Organizer",
                        "Tentative",
                        "Accept",
                        "Decline",
                        "NoResponseReceived"
                    ],
                    "type": "string"
                },
                "Required": {
                    "type": "boolean"
                },
                "UserId": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "PersonId": {
                    "type": "string"
                },
                "PersonName": {
                    "type": "string"
                },
                "OrganizationId": {
                    "type": "string"
                },
                "OrganizationName": {
                    "type": "string"
                }
            }
        },
        "MeetingActivity": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MeetingOpportunity": {
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MeetingInfoCreateDto": {
            "required": [
                "MeetingUserId",
                "MeetingDescription",
                "MeetingSubject",
                "MeetingStart",
                "MeetingEnd"
            ],
            "type": "object",
            "properties": {
                "MeetingUserId": {
                    "type": "string"
                },
                "MeetingCreatedBy": {
                    "type": "string"
                },
                "MeetingSendInvitations": {
                    "type": "boolean"
                },
                "MeetingDescription": {
                    "type": "string"
                },
                "MeetingTimeZone": {
                    "type": "string"
                },
                "MeetingAttendeeEmails": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeetingOrganisations": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingOrganisationDto"
                    }
                },
                "MeetingPersons": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingPerson"
                    }
                },
                "MeetingUsers": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingUser"
                    }
                },
                "MeetingSubject": {
                    "type": "string"
                },
                "MeetingStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingIsAllDayMeeting": {
                    "type": "boolean"
                },
                "MeetingIsPrivate": {
                    "type": "boolean"
                },
                "MeetingLocation": {
                    "type": "string"
                },
                "MeetingPlus1": {
                    "type": "string"
                },
                "MeetingPlus2": {
                    "type": "string"
                },
                "MeetingPlus3": {
                    "type": "string"
                },
                "MeetingPlus4": {
                    "type": "string"
                },
                "MeetingPlus5": {
                    "type": "string"
                },
                "MeetingPlus6": {
                    "type": "string"
                },
                "MeetingPlus7": {
                    "type": "string"
                },
                "MeetingPlus8": {
                    "type": "string"
                },
                "MeetingPlus9": {
                    "type": "string"
                },
                "MeetingPlus10": {
                    "type": "string"
                },
                "MeetingPlus11": {
                    "type": "string"
                },
                "MeetingPlus12": {
                    "type": "string"
                },
                "MeetingPlus13": {
                    "type": "string"
                },
                "MeetingPlus14": {
                    "type": "string"
                },
                "MeetingPlus15": {
                    "type": "string"
                },
                "MeetingPlus16": {
                    "type": "string"
                },
                "MeetingPlus17": {
                    "type": "string"
                },
                "MeetingPlus18": {
                    "type": "string"
                },
                "MeetingPlus19": {
                    "type": "string"
                },
                "MeetingPlus20": {
                    "type": "string"
                }
            }
        },
        "MeetingOrganisationDto": {
            "type": "object",
            "properties": {
                "OrganisationId": {
                    "type": "string"
                }
            }
        },
        "MeetingPerson": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                }
            }
        },
        "MeetingUser": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                }
            }
        },
        "MeetingInfoGetByIdDto": {
            "required": [
                "MeetingDescription",
                "MeetingSource",
                "MeetingUserId",
                "MeetingId",
                "MeetingIsRecurring",
                "MeetingIsCancelled",
                "MeetingCreated",
                "MeetingUpdated",
                "MeetingUpdatedBy",
                "MeetingOrganisations",
                "MeetingAttendees",
                "MeetingSubject",
                "MeetingStart",
                "MeetingEnd"
            ],
            "type": "object",
            "properties": {
                "MeetingDescription": {
                    "type": "string"
                },
                "MeetingSource": {
                    "enum": [
                        "Exchange",
                        "WebCRM",
                        "Google"
                    ],
                    "type": "string"
                },
                "MeetingUserId": {
                    "type": "string"
                },
                "MeetingId": {
                    "type": "string"
                },
                "MeetingIsRecurring": {
                    "type": "boolean"
                },
                "MeetingIsCancelled": {
                    "type": "boolean"
                },
                "MeetingCreated": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingUpdatedBy": {
                    "type": "string"
                },
                "MeetingOrganisations": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganisationInfoDto"
                    }
                },
                "MeetingCreatedBy": {
                    "type": "string"
                },
                "MeetingAttendees": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttendeeInfo"
                    }
                },
                "MeetingActivities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingActivity"
                    }
                },
                "MeetingOpportunities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingOpportunity"
                    }
                },
                "MeetingSubject": {
                    "type": "string"
                },
                "MeetingStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingIsAllDayMeeting": {
                    "type": "boolean"
                },
                "MeetingIsPrivate": {
                    "type": "boolean"
                },
                "MeetingLocation": {
                    "type": "string"
                },
                "MeetingPlus1": {
                    "type": "string"
                },
                "MeetingPlus2": {
                    "type": "string"
                },
                "MeetingPlus3": {
                    "type": "string"
                },
                "MeetingPlus4": {
                    "type": "string"
                },
                "MeetingPlus5": {
                    "type": "string"
                },
                "MeetingPlus6": {
                    "type": "string"
                },
                "MeetingPlus7": {
                    "type": "string"
                },
                "MeetingPlus8": {
                    "type": "string"
                },
                "MeetingPlus9": {
                    "type": "string"
                },
                "MeetingPlus10": {
                    "type": "string"
                },
                "MeetingPlus11": {
                    "type": "string"
                },
                "MeetingPlus12": {
                    "type": "string"
                },
                "MeetingPlus13": {
                    "type": "string"
                },
                "MeetingPlus14": {
                    "type": "string"
                },
                "MeetingPlus15": {
                    "type": "string"
                },
                "MeetingPlus16": {
                    "type": "string"
                },
                "MeetingPlus17": {
                    "type": "string"
                },
                "MeetingPlus18": {
                    "type": "string"
                },
                "MeetingPlus19": {
                    "type": "string"
                },
                "MeetingPlus20": {
                    "type": "string"
                }
            }
        },
        "MeetingInfoUpdateDto": {
            "required": [
                "MeetingSubject",
                "MeetingStart",
                "MeetingEnd"
            ],
            "type": "object",
            "properties": {
                "MeetingUserId": {
                    "type": "string"
                },
                "MeetingStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingUpdatedBy": {
                    "type": "string"
                },
                "MeetingSendUpdates": {
                    "enum": [
                        "None",
                        "All",
                        "ChangedOnly"
                    ],
                    "type": "string"
                },
                "MeetingDescription": {
                    "type": "string"
                },
                "MeetingTimeZone": {
                    "type": "string"
                },
                "MeetingAttendeeEmails": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MeetingOrganisations": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingOrganisationDto"
                    }
                },
                "MeetingPersons": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingPerson"
                    }
                },
                "MeetingUsers": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingUser"
                    }
                },
                "MeetingSubject": {
                    "type": "string"
                },
                "MeetingStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "MeetingIsAllDayMeeting": {
                    "type": "boolean"
                },
                "MeetingIsPrivate": {
                    "type": "boolean"
                },
                "MeetingLocation": {
                    "type": "string"
                },
                "MeetingPlus1": {
                    "type": "string"
                },
                "MeetingPlus2": {
                    "type": "string"
                },
                "MeetingPlus3": {
                    "type": "string"
                },
                "MeetingPlus4": {
                    "type": "string"
                },
                "MeetingPlus5": {
                    "type": "string"
                },
                "MeetingPlus6": {
                    "type": "string"
                },
                "MeetingPlus7": {
                    "type": "string"
                },
                "MeetingPlus8": {
                    "type": "string"
                },
                "MeetingPlus9": {
                    "type": "string"
                },
                "MeetingPlus10": {
                    "type": "string"
                },
                "MeetingPlus11": {
                    "type": "string"
                },
                "MeetingPlus12": {
                    "type": "string"
                },
                "MeetingPlus13": {
                    "type": "string"
                },
                "MeetingPlus14": {
                    "type": "string"
                },
                "MeetingPlus15": {
                    "type": "string"
                },
                "MeetingPlus16": {
                    "type": "string"
                },
                "MeetingPlus17": {
                    "type": "string"
                },
                "MeetingPlus18": {
                    "type": "string"
                },
                "MeetingPlus19": {
                    "type": "string"
                },
                "MeetingPlus20": {
                    "type": "string"
                }
            }
        },
        "MeetingInfoUpdateConnectionsDto": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "string"
                },
                "Activities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingActivity"
                    }
                },
                "Opportunities": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeetingOpportunity"
                    }
                }
            }
        },
        "MilestoneDto": {
            "required": [
                "MilestoneId"
            ],
            "type": "object",
            "properties": {
                "MilestoneActualBillableHours": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneActualRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneActualStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneActualWorkHours": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneApprovedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneApproverId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestoneApproverName": {
                    "type": "string"
                },
                "MilestoneAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestoneBillingStatus": {
                    "enum": [
                        "NoBilling0",
                        "NoBilling1",
                        "NoBilling2",
                        "Ongoing",
                        "WhenCompleted",
                        "HasBeenInvoiced"
                    ],
                    "type": "string"
                },
                "MilestoneComment": {
                    "type": "string"
                },
                "MilestoneCompleteDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneCreatedBy": {
                    "type": "string"
                },
                "MilestoneDescription": {
                    "type": "string"
                },
                "MilestoneId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestoneLockerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestoneLockerName": {
                    "type": "string"
                },
                "MilestoneOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestoneOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MilestonePlannedBillableHours": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestonePlannedRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "MilestonePlannedStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestonePlannedWorkHours": {
                    "format": "double",
                    "type": "number"
                },
                "MilestoneStatus": {
                    "enum": [
                        "New",
                        "Planned",
                        "Ongoing",
                        "StandBy",
                        "Complete"
                    ],
                    "type": "string"
                },
                "MilestoneUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "MilestoneUpdatedBy": {
                    "type": "string"
                },
                "MilestoneCustom1": {
                    "type": "string"
                },
                "MilestoneCustom2": {
                    "type": "string"
                },
                "MilestoneCustom3": {
                    "type": "string"
                },
                "MilestoneCustom4": {
                    "type": "string"
                },
                "MilestoneCustom5": {
                    "type": "string"
                },
                "MilestoneCustom6": {
                    "type": "string"
                },
                "MilestoneCustom7": {
                    "type": "string"
                },
                "MilestoneCustom8": {
                    "type": "string"
                },
                "MilestoneCustom9": {
                    "type": "string"
                },
                "MilestoneCustom10": {
                    "type": "string"
                },
                "MilestoneCustom11": {
                    "type": "string"
                },
                "MilestoneCustom12": {
                    "type": "string"
                },
                "MilestoneCustom13": {
                    "type": "string"
                },
                "MilestoneCustom14": {
                    "type": "string"
                },
                "MilestoneCustom15": {
                    "type": "string"
                },
                "MilestoneMemo": {
                    "type": "string"
                }
            }
        },
        "OpportunityDto": {
            "required": [
                "OpportunityId"
            ],
            "type": "object",
            "properties": {
                "OpportunityAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityAssignedTo2": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityComment": {
                    "type": "string"
                },
                "OpportunityCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityCreatedBy": {
                    "type": "string"
                },
                "OpportunityCurrencyName": {
                    "type": "string"
                },
                "OpportunityDescription": {
                    "type": "string"
                },
                "OpportunityDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityErpId": {
                    "type": "string"
                },
                "OpportunityErpReadOnly": {
                    "type": "string"
                },
                "OpportunityErpStatus": {
                    "enum": [
                        "NotReadyForSynchronization",
                        "ReadyForSynchronization",
                        "Synchronized"
                    ],
                    "type": "string"
                },
                "OpportunityErpSyncDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityGmRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityGmRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityHistory": {
                    "type": "string"
                },
                "OpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityLevelText": {
                    "type": "string"
                },
                "OpportunityLost1": {
                    "type": "string"
                },
                "OpportunityLost2": {
                    "type": "string"
                },
                "OpportunityLost3": {
                    "type": "string"
                },
                "OpportunityLostDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityNextFollowUp": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityNote": {
                    "type": "string"
                },
                "OpportunityNumber": {
                    "type": "string"
                },
                "OpportunityOrderDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityOrderGmValue": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityOrderValue": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityPercent": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityPersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityProduct": {
                    "type": "string"
                },
                "OpportunityProductId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityQuotationLanguageId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunityRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "OpportunitySearch1": {
                    "type": "string"
                },
                "OpportunitySearch2": {
                    "type": "string"
                },
                "OpportunitySpentTime": {
                    "type": "string"
                },
                "OpportunityUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpportunityUpdatedBy": {
                    "type": "string"
                },
                "OpportunityUserGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityWinPercent": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityWinPercent2": {
                    "format": "int32",
                    "type": "integer"
                },
                "OpportunityWinYesNo": {
                    "type": "boolean"
                },
                "OpportunityPlus1": {
                    "type": "string"
                },
                "OpportunityPlus2": {
                    "type": "string"
                },
                "OpportunityPlus3": {
                    "type": "string"
                },
                "OpportunityPlus4": {
                    "type": "string"
                },
                "OpportunityPlus5": {
                    "type": "string"
                },
                "OpportunityPlus6": {
                    "type": "string"
                },
                "OpportunityPlus7": {
                    "type": "string"
                },
                "OpportunityPlus8": {
                    "type": "string"
                },
                "OpportunityPlus9": {
                    "type": "string"
                },
                "OpportunityPlus10": {
                    "type": "string"
                },
                "OpportunityPlus11": {
                    "type": "string"
                },
                "OpportunityPlus12": {
                    "type": "string"
                },
                "OpportunityPlus13": {
                    "type": "string"
                },
                "OpportunityPlus14": {
                    "type": "string"
                },
                "OpportunityPlus15": {
                    "type": "string"
                },
                "OpportunityPlus16": {
                    "type": "string"
                },
                "OpportunityPlus17": {
                    "type": "string"
                },
                "OpportunityPlus18": {
                    "type": "string"
                },
                "OpportunityPlus19": {
                    "type": "string"
                },
                "OpportunityPlus20": {
                    "type": "string"
                },
                "OpportunityCustom1": {
                    "type": "string"
                },
                "OpportunityCustom2": {
                    "type": "string"
                },
                "OpportunityCustom3": {
                    "type": "string"
                },
                "OpportunityCustom4": {
                    "type": "string"
                },
                "OpportunityCustom5": {
                    "type": "string"
                },
                "OpportunityCustom6": {
                    "type": "string"
                },
                "OpportunityCustom7": {
                    "type": "string"
                },
                "OpportunityCustom8": {
                    "type": "string"
                },
                "OpportunityCustom9": {
                    "type": "string"
                },
                "OpportunityCustom10": {
                    "type": "string"
                },
                "OpportunityCustom11": {
                    "type": "string"
                },
                "OpportunityCustom12": {
                    "type": "string"
                },
                "OpportunityCustom13": {
                    "type": "string"
                },
                "OpportunityCustom14": {
                    "type": "string"
                },
                "OpportunityCustom15": {
                    "type": "string"
                },
                "OpportunityMemo": {
                    "type": "string"
                }
            }
        },
        "RevenueDto": {
            "required": [
                "RevenueId"
            ],
            "type": "object",
            "properties": {
                "RevenueCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "RevenueCreatedBy": {
                    "type": "string"
                },
                "RevenueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "RevenueGmRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueGmRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueId": {
                    "format": "int32",
                    "type": "integer"
                },
                "RevenueMemo": {
                    "type": "string"
                },
                "RevenueMonthsText": {
                    "type": "string"
                },
                "RevenueOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "RevenueOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "RevenueRepeatMonth": {
                    "format": "int32",
                    "type": "integer"
                },
                "RevenueRepeatUntil": {
                    "format": "date-time",
                    "type": "string"
                },
                "RevenueRevenue1": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue2": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue3": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue4": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue5": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue6": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue7": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue8": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue9": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue10": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue11": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueRevenue12": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueText": {
                    "type": "string"
                },
                "RevenueTotalGmReveue": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueTotalRevenue": {
                    "format": "double",
                    "type": "number"
                },
                "RevenueUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "RevenueUpdatedBy": {
                    "type": "string"
                }
            }
        },
        "OpportunityHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Responsible",
                            "Responsible2",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "OrganisationDto": {
            "required": [
                "OrganisationId"
            ],
            "type": "object",
            "properties": {
                "OrganisationAddress": {
                    "maxLength": 250,
                    "type": "string"
                },
                "OrganisationAlert": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationApprovalStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationCity": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationComment": {
                    "type": "string"
                },
                "OrganisationCompareName": {
                    "maxLength": 500,
                    "type": "string"
                },
                "OrganisationCountry": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationCreatedBy": {
                    "type": "string"
                },
                "OrganisationDivisionName": {
                    "maxLength": 200,
                    "type": "string"
                },
                "OrganisationDomain": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom1": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom2": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom3": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom4": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom5": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom6": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom7": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationExtraCustom8": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationFax": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationGps": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationImageFileExtension": {
                    "type": "string"
                },
                "OrganisationIndustry": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationLastDisplayedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationLastItemType": {
                    "enum": [
                        "Undefined",
                        "Activity",
                        "Opportunity",
                        "Delivery",
                        "Meeting",
                        "SupportCase"
                    ],
                    "type": "string"
                },
                "OrganisationLastItemUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationMarketDataId": {
                    "type": "string"
                },
                "OrganisationMarketDataProviderId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationName": {
                    "maxLength": 200,
                    "type": "string"
                },
                "OrganisationNoAds": {
                    "type": "boolean"
                },
                "OrganisationHistory": {
                    "type": "string"
                },
                "OrganisationOutlookSync": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationOverlayUrl": {
                    "type": "string"
                },
                "OrganisationOwner": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationOwner2": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationPostCode": {
                    "type": "string"
                },
                "OrganisationReportTemp": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationSla": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationState": {
                    "type": "string"
                },
                "OrganisationStatus": {
                    "type": "string"
                },
                "OrganisationTelephone": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationTelephoneSearch": {
                    "type": "string"
                },
                "OrganisationTerritoryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationType": {
                    "type": "string"
                },
                "OrganisationUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationUpdatedBy": {
                    "type": "string"
                },
                "OrganisationVatCountry": {
                    "maxLength": 10,
                    "type": "string"
                },
                "OrganisationVatGroup": {
                    "maxLength": 20,
                    "type": "string"
                },
                "OrganisationVatNumber": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationVatStatus": {
                    "type": "string"
                },
                "OrganisationVatVerifiedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationWww": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXDate1": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationXDate2": {
                    "format": "date-time",
                    "type": "string"
                },
                "OrganisationXInt1": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt2": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt3": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt4": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt5": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt6": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt7": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXInt8": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrganisationXMemo1": {
                    "type": "string"
                },
                "OrganisationXMemo2": {
                    "type": "string"
                },
                "OrganisationXText1": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText2": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText3": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText4": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText5": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText6": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText7": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationXText8": {
                    "maxLength": 50,
                    "type": "string"
                },
                "OrganisationPlus1": {
                    "type": "string"
                },
                "OrganisationPlus2": {
                    "type": "string"
                },
                "OrganisationPlus3": {
                    "type": "string"
                },
                "OrganisationPlus4": {
                    "type": "string"
                },
                "OrganisationPlus5": {
                    "type": "string"
                },
                "OrganisationPlus6": {
                    "type": "string"
                },
                "OrganisationPlus7": {
                    "type": "string"
                },
                "OrganisationPlus8": {
                    "type": "string"
                },
                "OrganisationPlus9": {
                    "type": "string"
                },
                "OrganisationPlus10": {
                    "type": "string"
                },
                "OrganisationPlus11": {
                    "type": "string"
                },
                "OrganisationPlus12": {
                    "type": "string"
                },
                "OrganisationPlus13": {
                    "type": "string"
                },
                "OrganisationPlus14": {
                    "type": "string"
                },
                "OrganisationPlus15": {
                    "type": "string"
                },
                "OrganisationPlus16": {
                    "type": "string"
                },
                "OrganisationPlus17": {
                    "type": "string"
                },
                "OrganisationPlus18": {
                    "type": "string"
                },
                "OrganisationPlus19": {
                    "type": "string"
                },
                "OrganisationPlus20": {
                    "type": "string"
                },
                "OrganisationCustom1": {
                    "type": "string"
                },
                "OrganisationCustom2": {
                    "type": "string"
                },
                "OrganisationCustom3": {
                    "type": "string"
                },
                "OrganisationCustom4": {
                    "type": "string"
                },
                "OrganisationCustom5": {
                    "type": "string"
                },
                "OrganisationCustom6": {
                    "type": "string"
                },
                "OrganisationCustom7": {
                    "type": "string"
                },
                "OrganisationCustom8": {
                    "type": "string"
                },
                "OrganisationCustom9": {
                    "type": "string"
                },
                "OrganisationCustom10": {
                    "type": "string"
                },
                "OrganisationCustom11": {
                    "type": "string"
                },
                "OrganisationCustom12": {
                    "type": "string"
                },
                "OrganisationCustom13": {
                    "type": "string"
                },
                "OrganisationCustom14": {
                    "type": "string"
                },
                "OrganisationCustom15": {
                    "type": "string"
                },
                "OrganisationMemo": {
                    "type": "string"
                }
            }
        },
        "SupportCaseDto": {
            "required": [
                "SupportCaseId"
            ],
            "type": "object",
            "properties": {
                "SupportCaseAction": {
                    "type": "string"
                },
                "SupportCaseAssignedTo": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseCcBcc": {
                    "type": "string"
                },
                "SupportCaseChannel": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseCloseReason": {
                    "type": "string"
                },
                "SupportCaseCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "SupportCaseCreatedBy": {
                    "type": "string"
                },
                "SupportCaseDeadline": {
                    "format": "date-time",
                    "type": "string"
                },
                "SupportCaseDescription": {
                    "type": "string"
                },
                "SupportCaseDuration": {
                    "format": "double",
                    "type": "number"
                },
                "SupportCaseHistory": {
                    "type": "string"
                },
                "SupportCaseId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseNotificationType": {
                    "enum": [
                        "Never",
                        "StatusEmail",
                        "StatusEmailAndMessage",
                        "Default"
                    ],
                    "type": "string"
                },
                "SupportCaseOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseOwnerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCasePersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCasePriority": {
                    "enum": [
                        "Undefined",
                        "High",
                        "Medium",
                        "Low"
                    ],
                    "type": "string"
                },
                "SupportCaseProduct": {
                    "type": "string"
                },
                "SupportCaseProductId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseSolution": {
                    "type": "string"
                },
                "SupportCaseSource": {
                    "enum": [
                        "Unknown",
                        "Email",
                        "Telephone",
                        "Fax",
                        "Website",
                        "LandingPage",
                        "Other"
                    ],
                    "type": "string"
                },
                "SupportCaseSpentTime": {
                    "type": "string"
                },
                "SupportCaseStatus": {
                    "enum": [
                        "Created",
                        "Ongoing",
                        "Closed"
                    ],
                    "type": "string"
                },
                "SupportCaseSubject": {
                    "type": "string"
                },
                "SupportCaseTicket": {
                    "format": "int32",
                    "type": "integer"
                },
                "SupportCaseUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "SupportCaseUpdatedBy": {
                    "type": "string"
                },
                "SupportCasePlus1": {
                    "type": "string"
                },
                "SupportCasePlus2": {
                    "type": "string"
                },
                "SupportCasePlus3": {
                    "type": "string"
                },
                "SupportCasePlus4": {
                    "type": "string"
                },
                "SupportCasePlus5": {
                    "type": "string"
                },
                "SupportCasePlus6": {
                    "type": "string"
                },
                "SupportCasePlus7": {
                    "type": "string"
                },
                "SupportCasePlus8": {
                    "type": "string"
                },
                "SupportCasePlus9": {
                    "type": "string"
                },
                "SupportCasePlus10": {
                    "type": "string"
                },
                "SupportCasePlus11": {
                    "type": "string"
                },
                "SupportCasePlus12": {
                    "type": "string"
                },
                "SupportCasePlus13": {
                    "type": "string"
                },
                "SupportCasePlus14": {
                    "type": "string"
                },
                "SupportCasePlus15": {
                    "type": "string"
                },
                "SupportCasePlus16": {
                    "type": "string"
                },
                "SupportCasePlus17": {
                    "type": "string"
                },
                "SupportCasePlus18": {
                    "type": "string"
                },
                "SupportCasePlus19": {
                    "type": "string"
                },
                "SupportCasePlus20": {
                    "type": "string"
                },
                "SupportCaseCustom1": {
                    "type": "string"
                },
                "SupportCaseCustom2": {
                    "type": "string"
                },
                "SupportCaseCustom3": {
                    "type": "string"
                },
                "SupportCaseCustom4": {
                    "type": "string"
                },
                "SupportCaseCustom5": {
                    "type": "string"
                },
                "SupportCaseCustom6": {
                    "type": "string"
                },
                "SupportCaseCustom7": {
                    "type": "string"
                },
                "SupportCaseCustom8": {
                    "type": "string"
                },
                "SupportCaseCustom9": {
                    "type": "string"
                },
                "SupportCaseCustom10": {
                    "type": "string"
                },
                "SupportCaseCustom11": {
                    "type": "string"
                },
                "SupportCaseCustom12": {
                    "type": "string"
                },
                "SupportCaseCustom13": {
                    "type": "string"
                },
                "SupportCaseCustom14": {
                    "type": "string"
                },
                "SupportCaseCustom15": {
                    "type": "string"
                },
                "SupportCaseMemo": {
                    "type": "string"
                }
            }
        },
        "PersonDto": {
            "required": [
                "PersonId"
            ],
            "type": "object",
            "properties": {
                "PersonBirthday": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonBlockMassEmail": {
                    "type": "boolean"
                },
                "PersonBlockMassEmail2": {
                    "type": "boolean"
                },
                "PersonCampaignPassword": {
                    "type": "string"
                },
                "PersonCampaignWrongPasswordCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonCheckMark1": {
                    "type": "boolean"
                },
                "PersonCheckMark2": {
                    "type": "boolean"
                },
                "PersonCheckMark3": {
                    "type": "boolean"
                },
                "PersonCheckMark4": {
                    "type": "boolean"
                },
                "PersonCheckMark5": {
                    "type": "boolean"
                },
                "PersonCheckMark6": {
                    "type": "boolean"
                },
                "PersonCheckMark7": {
                    "type": "boolean"
                },
                "PersonCheckMark8": {
                    "type": "boolean"
                },
                "PersonCheckMark9": {
                    "type": "boolean"
                },
                "PersonCheckMark10": {
                    "type": "boolean"
                },
                "PersonComment": {
                    "type": "string"
                },
                "PersonCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonCreatedBy": {
                    "type": "string"
                },
                "PersonDirectPhone": {
                    "type": "string"
                },
                "PersonEmail": {
                    "type": "string"
                },
                "PersonEmail2": {
                    "type": "string"
                },
                "PersonEmailBounces": {
                    "type": "boolean"
                },
                "PersonEmail2Bounces": {
                    "type": "boolean"
                },
                "PersonFirstName": {
                    "type": "string"
                },
                "PersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonImageFileExtension": {
                    "type": "string"
                },
                "PersonLastLoginDateTime": {
                    "format": "date-time",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonLastName": {
                    "type": "string"
                },
                "PersonLoginLog": {
                    "type": "string"
                },
                "PersonMarketDateId": {
                    "type": "string"
                },
                "PersonMemberGroupId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonMemberLanguageId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonMemberNumber": {
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonMemberPassword": {
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonMemberStartDate": {
                    "format": "date-time",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonMemberStatusId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonMemberWrongPasswordCount": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonMiddleName": {
                    "type": "string"
                },
                "PersonMobilePhone": {
                    "type": "string"
                },
                "PersonName": {
                    "type": "string"
                },
                "PersonHistory": {
                    "type": "string"
                },
                "PersonOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonPassword": {
                    "type": "string"
                },
                "PersonSalutation": {
                    "type": "string"
                },
                "PersonSkype": {
                    "type": "string"
                },
                "PersonSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonStatus": {
                    "enum": [
                        "Active",
                        "Resigned",
                        "Other",
                        "Guest"
                    ],
                    "type": "string"
                },
                "PersonSupportLanguageId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonTelephoneSearch": {
                    "type": "string"
                },
                "PersonTitle": {
                    "type": "string"
                },
                "PersonUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonUpdatedBy": {
                    "type": "string"
                },
                "PersonPlus1": {
                    "type": "string"
                },
                "PersonPlus2": {
                    "type": "string"
                },
                "PersonPlus3": {
                    "type": "string"
                },
                "PersonPlus4": {
                    "type": "string"
                },
                "PersonPlus5": {
                    "type": "string"
                },
                "PersonPlus6": {
                    "type": "string"
                },
                "PersonPlus7": {
                    "type": "string"
                },
                "PersonPlus8": {
                    "type": "string"
                },
                "PersonPlus9": {
                    "type": "string"
                },
                "PersonPlus10": {
                    "type": "string"
                },
                "PersonPlus11": {
                    "type": "string"
                },
                "PersonPlus12": {
                    "type": "string"
                },
                "PersonPlus13": {
                    "type": "string"
                },
                "PersonPlus14": {
                    "type": "string"
                },
                "PersonPlus15": {
                    "type": "string"
                },
                "PersonPlus16": {
                    "type": "string"
                },
                "PersonPlus17": {
                    "type": "string"
                },
                "PersonPlus18": {
                    "type": "string"
                },
                "PersonPlus19": {
                    "type": "string"
                },
                "PersonPlus20": {
                    "type": "string"
                },
                "PersonCustom1": {
                    "type": "string"
                },
                "PersonCustom2": {
                    "type": "string"
                },
                "PersonCustom3": {
                    "type": "string"
                },
                "PersonCustom4": {
                    "type": "string"
                },
                "PersonCustom5": {
                    "type": "string"
                },
                "PersonCustom6": {
                    "type": "string"
                },
                "PersonCustom7": {
                    "type": "string"
                },
                "PersonCustom8": {
                    "type": "string"
                },
                "PersonCustom9": {
                    "type": "string"
                },
                "PersonCustom10": {
                    "type": "string"
                },
                "PersonCustom11": {
                    "type": "string"
                },
                "PersonCustom12": {
                    "type": "string"
                },
                "PersonCustom13": {
                    "type": "string"
                },
                "PersonCustom14": {
                    "type": "string"
                },
                "PersonCustom15": {
                    "type": "string"
                },
                "PersonMemo": {
                    "type": "string"
                }
            }
        },
        "ProductDto": {
            "required": [
                "ProductId"
            ],
            "type": "object",
            "properties": {
                "ProductCombined": {
                    "type": "string"
                },
                "ProductComment": {
                    "type": "string"
                },
                "ProductCostPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ProductCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProductCreatedBy": {
                    "type": "string"
                },
                "ProductDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "ProductId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ProductHistory": {
                    "type": "string"
                },
                "ProductOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductPersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductPrice": {
                    "format": "double",
                    "type": "number"
                },
                "ProductProductYear": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductQuantity": {
                    "format": "double",
                    "type": "number"
                },
                "ProductSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "ProductStockStatus": {
                    "type": "string"
                },
                "ProductUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "ProductUpdatedBy": {
                    "type": "string"
                },
                "ProductVatCode": {
                    "type": "string"
                },
                "ProductPlus1": {
                    "type": "string"
                },
                "ProductPlus2": {
                    "type": "string"
                },
                "ProductPlus3": {
                    "type": "string"
                },
                "ProductPlus4": {
                    "type": "string"
                },
                "ProductPlus5": {
                    "type": "string"
                },
                "ProductPlus6": {
                    "type": "string"
                },
                "ProductPlus7": {
                    "type": "string"
                },
                "ProductPlus8": {
                    "type": "string"
                },
                "ProductPlus9": {
                    "type": "string"
                },
                "ProductPlus10": {
                    "type": "string"
                },
                "ProductPlus11": {
                    "type": "string"
                },
                "ProductPlus12": {
                    "type": "string"
                },
                "ProductPlus13": {
                    "type": "string"
                },
                "ProductPlus14": {
                    "type": "string"
                },
                "ProductPlus15": {
                    "type": "string"
                },
                "ProductPlus16": {
                    "type": "string"
                },
                "ProductPlus17": {
                    "type": "string"
                },
                "ProductPlus18": {
                    "type": "string"
                },
                "ProductPlus19": {
                    "type": "string"
                },
                "ProductPlus20": {
                    "type": "string"
                },
                "ProductCustom1": {
                    "type": "string"
                },
                "ProductCustom2": {
                    "type": "string"
                },
                "ProductCustom3": {
                    "type": "string"
                },
                "ProductCustom4": {
                    "type": "string"
                },
                "ProductCustom5": {
                    "type": "string"
                },
                "ProductCustom6": {
                    "type": "string"
                },
                "ProductCustom7": {
                    "type": "string"
                },
                "ProductCustom8": {
                    "type": "string"
                },
                "ProductCustom9": {
                    "type": "string"
                },
                "ProductCustom10": {
                    "type": "string"
                },
                "ProductCustom11": {
                    "type": "string"
                },
                "ProductCustom12": {
                    "type": "string"
                },
                "ProductCustom13": {
                    "type": "string"
                },
                "ProductCustom14": {
                    "type": "string"
                },
                "ProductCustom15": {
                    "type": "string"
                },
                "ProductMemo": {
                    "type": "string"
                }
            }
        },
        "RelationDto": {
            "required": [
                "RelationId"
            ],
            "type": "object",
            "properties": {
                "RelationCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationComment": {
                    "type": "string"
                },
                "RelationCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "RelationCreatedBy": {
                    "type": "string"
                },
                "RelationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationOrganisation1Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationOrganisation2Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationPerson1Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationPerson2Id": {
                    "format": "int32",
                    "type": "integer"
                },
                "RelationType": {
                    "enum": [
                        "Undefined",
                        "PersonToPerson",
                        "OrganisationToPerson",
                        "OrganisationToOrganisation",
                        "LinkedOrganisations"
                    ],
                    "type": "string"
                },
                "RelationUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "RelationUpdatedBy": {
                    "type": "string"
                }
            }
        },
        "OrganisationHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Owner",
                            "Owner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "PersonHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "PersonB2CDto": {
            "required": [
                "PersonB2CId",
                "PersonB2COrganisationId"
            ],
            "type": "object",
            "properties": {
                "PersonB2CBirthday": {
                    "format": "date-time",
                    "type": "string"
                },
                "PersonB2CAddress": {
                    "type": "string"
                },
                "PersonB2CAlert": {
                    "type": "string"
                },
                "PersonB2CCampaignPassword": {
                    "type": "string"
                },
                "PersonB2CCampaignWrongPasswordCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2CCheckMark1": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark2": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark3": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark4": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark5": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark6": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark7": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark8": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark9": {
                    "type": "boolean"
                },
                "PersonB2CCheckMark10": {
                    "type": "boolean"
                },
                "PersonB2CCity": {
                    "type": "string"
                },
                "PersonB2CComment": {
                    "type": "string"
                },
                "PersonB2CCountry": {
                    "type": "string"
                },
                "PersonB2CDirectPhone": {
                    "type": "string"
                },
                "PersonB2CEmail": {
                    "type": "string"
                },
                "PersonB2CEmail2": {
                    "type": "string"
                },
                "PersonB2CExtraCustom1": {
                    "type": "string"
                },
                "PersonB2CExtraCustom2": {
                    "type": "string"
                },
                "PersonB2CExtraCustom3": {
                    "type": "string"
                },
                "PersonB2CExtraCustom4": {
                    "type": "string"
                },
                "PersonB2CExtraCustom5": {
                    "type": "string"
                },
                "PersonB2CExtraCustom6": {
                    "type": "string"
                },
                "PersonB2CExtraCustom7": {
                    "type": "string"
                },
                "PersonB2CExtraCustom8": {
                    "type": "string"
                },
                "PersonB2CFax": {
                    "type": "string"
                },
                "PersonB2CFirstName": {
                    "type": "string"
                },
                "PersonB2CGps": {
                    "type": "string"
                },
                "PersonB2CHistory": {
                    "type": "string"
                },
                "PersonB2CId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2CIndustry": {
                    "type": "string"
                },
                "PersonB2CLastLoginDateTime": {
                    "format": "date-time",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonB2CLastName": {
                    "type": "string"
                },
                "PersonB2CMemberGroupId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonB2CMemberLanguageId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonB2CMemberNumber": {
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonB2CMemberPassword": {
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonB2CMemberStartDate": {
                    "format": "date-time",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "string"
                },
                "PersonB2CMemberStatusId": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonB2CMemberWrongPasswordCount": {
                    "format": "int32",
                    "description": "This property is obsolete and will be removed in the future. ",
                    "type": "integer"
                },
                "PersonB2CMiddleName": {
                    "type": "string"
                },
                "PersonB2CMobilePhone": {
                    "type": "string"
                },
                "PersonB2COrganisationComment": {
                    "type": "string"
                },
                "PersonB2COrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2COrganisationStatus": {
                    "type": "string"
                },
                "PersonB2COverlayUrl": {
                    "type": "string"
                },
                "PersonB2COwner": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2COwner2": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2CPostCode": {
                    "type": "string"
                },
                "PersonB2CSalutation": {
                    "type": "string"
                },
                "PersonB2CSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2CState": {
                    "type": "string"
                },
                "PersonB2CStatus": {
                    "enum": [
                        "Active",
                        "Resigned",
                        "Other",
                        "Guest"
                    ],
                    "type": "string"
                },
                "PersonB2CTelephone": {
                    "type": "string"
                },
                "PersonB2CTerritoryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PersonB2CTitle": {
                    "type": "string"
                },
                "PersonB2CType": {
                    "type": "string"
                },
                "PersonB2CVatGroup": {
                    "type": "string"
                },
                "PersonB2CWww": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom1": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom2": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom3": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom4": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom5": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom6": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom7": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom8": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom9": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom10": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom11": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom12": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom13": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom14": {
                    "type": "string"
                },
                "PersonB2CPerson1Custom15": {
                    "type": "string"
                },
                "PersonB2CPerson1Memo": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus1": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus2": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus3": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus4": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus5": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus6": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus7": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus8": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus9": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus10": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus11": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus12": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus13": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus14": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus15": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus16": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus17": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus18": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus19": {
                    "type": "string"
                },
                "PersonB2CPerson1Plus20": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom1": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom2": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom3": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom4": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom5": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom6": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom7": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom8": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom9": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom10": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom11": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom12": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom13": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom14": {
                    "type": "string"
                },
                "PersonB2CPerson2Custom15": {
                    "type": "string"
                },
                "PersonB2CPerson2Memo": {
                    "type": "string"
                }
            }
        },
        "PersonB2CHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Owner",
                            "Owner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "ProductHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "QuotationLineUpdateDto": {
            "required": [
                "QuotationLineId"
            ],
            "type": "object",
            "properties": {
                "QuotationLineLinkedDataId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineComment": {
                    "type": "string"
                },
                "QuotationLineCostPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "QuotationLineCreatedBy": {
                    "type": "string"
                },
                "QuotationLineData1": {
                    "type": "string"
                },
                "QuotationLineData2": {
                    "type": "string"
                },
                "QuotationLineData3": {
                    "type": "string"
                },
                "QuotationLineData4": {
                    "type": "string"
                },
                "QuotationLineData5": {
                    "type": "string"
                },
                "QuotationLineData6": {
                    "type": "string"
                },
                "QuotationLineData7": {
                    "type": "string"
                },
                "QuotationLineData8": {
                    "type": "string"
                },
                "QuotationLineData9": {
                    "type": "string"
                },
                "QuotationLineDiscount": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineListPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineMemo": {
                    "type": "string"
                },
                "QuotationLineOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLinePersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLinePrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineQuantity": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineSortOrder": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineStockStatus": {
                    "type": "string"
                },
                "QuotationLineUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "QuotationLineUpdatedBy": {
                    "type": "string"
                },
                "QuotationLineVatPercentage": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "QuotationLineLinkedDataItemDto": {
            "required": [
                "QuotationLineLinkedDataItemId"
            ],
            "type": "object",
            "properties": {
                "QuotationLineLinkedDataItemCostPrice": {
                    "format": "double",
                    "type": "number"
                },
                "QuotationLineLinkedDataItemVatCode": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData1": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData2": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData3": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData4": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData5": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData6": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData7": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData8": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemData9": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemDataMemo": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemEntityType": {
                    "enum": [
                        "Undefined",
                        "Organisation",
                        "Person",
                        "Activity",
                        "Meeting",
                        "Opportunity",
                        "Delivery",
                        "Product",
                        "SupportCase",
                        "SupportFaq"
                    ],
                    "type": "string"
                },
                "QuotationLineLinkedDataItemId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedDataItemItemGroup": {
                    "type": "string"
                },
                "QuotationLineLinkedDataItemPrice": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "QuotationLineLinkedSetupDto": {
            "required": [
                "QuotationLineLinkedSetupId"
            ],
            "type": "object",
            "properties": {
                "QuotationLineLinkedSetupCostPriceLabel": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupListPriceLabel": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupPriceLabel": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupQuantityLabel": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupFontSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupFontFamily": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupHighlightVat": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseCostPrice": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseCustomMemo": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField1": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField2": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField3": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField4": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField5": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField6": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField7": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField8": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLinkedField9": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseListPrice": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseQuantity": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseDiscount": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUsePriceLine": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUsePriceTotal": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseTotalDiscount": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseIntegerPrice": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseIntegerQuantity": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseIntegerDiscount": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseRevenue": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseLineNumber": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseSpacer": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseVat": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupUseVatPerLine": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupCostPriceConditionField": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupCostPriceConditionValue": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupPastAsCostPrice": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupCostPriceEditMode": {
                    "enum": [
                        "Never",
                        "Always",
                        "WhenListPriceIsZero",
                        "WhenItemGroupContainsAsterix",
                        "WhenItemGroupContainsAtsign",
                        "WhenItemGroupContainsUnderscore"
                    ],
                    "type": "string"
                },
                "QuotationLineLinkedSetupIsImageEnabled": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupImageUrl": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupImageWidth": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupImageHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupCreateDateField": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupUpdateDateField": {
                    "type": "string"
                },
                "QuotationLineLinkedSetupEntityType": {
                    "enum": [
                        "Undefined",
                        "Organisation",
                        "Person",
                        "Activity",
                        "Meeting",
                        "Opportunity",
                        "Delivery",
                        "Product",
                        "SupportCase",
                        "SupportFaq"
                    ],
                    "type": "string"
                },
                "QuotationLineLinkedSetupField1": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField2": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField3": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField4": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField5": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField6": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField7": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField8": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupField9": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupIsUniqueValueRequired": {
                    "type": "boolean"
                },
                "QuotationLineLinkedSetupLinkMode": {
                    "enum": [
                        "Regular",
                        "Multiselect"
                    ],
                    "type": "string"
                },
                "QuotationLineLinkedSetupLookupMode": {
                    "enum": [
                        "DropdownLists",
                        "FreeTextSearch"
                    ],
                    "type": "string"
                },
                "QuotationLineLinkedSetupMemoField": {
                    "format": "int32",
                    "type": "integer"
                },
                "QuotationLineLinkedSetupUseItemGroup": {
                    "type": "boolean"
                }
            }
        },
        "QuotationLineHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "RelationHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "SupportCaseHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Responsible",
                            "Owner",
                            "OrganisationOwner",
                            "OrganisationOwner2"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "TimeExpenseDto": {
            "required": [
                "TimeExpenseId"
            ],
            "type": "object",
            "properties": {
                "TimeExpenseBillableHours": {
                    "format": "double",
                    "type": "number"
                },
                "TimeExpenseCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeExpenseCreatedBy": {
                    "type": "string"
                },
                "TimeExpenseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeExpenseEndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeExpenseFixedPrice": {
                    "format": "double",
                    "type": "number"
                },
                "TimeExpenseFixedPriceText": {
                    "type": "string"
                },
                "TimeExpenseId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeExpenseMilestoneId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeExpenseOpportunityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeExpenseOrganisationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeExpenseOvertimeBillableHours": {
                    "format": "double",
                    "type": "number"
                },
                "TimeExpenseStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeExpenseText": {
                    "type": "string"
                },
                "TimeExpenseTravelHours": {
                    "format": "double",
                    "type": "number"
                },
                "TimeExpenseType": {
                    "enum": [
                        "Undefined",
                        "T",
                        "E",
                        "M",
                        "A",
                        "Delivery",
                        "Time"
                    ],
                    "type": "string"
                },
                "TimeExpenseUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "TimeExpenseUpdatedBy": {
                    "type": "string"
                },
                "TimeExpenseUserId": {
                    "format": "int32",
                    "type": "integer"
                },
                "TimeExpenseWorkHours": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "UserDto": {
            "required": [
                "UserId"
            ],
            "type": "object",
            "properties": {
                "UserAccessId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserAccessLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserAddressFormat": {
                    "enum": [
                        "Scandinavian",
                        "UK",
                        "US"
                    ],
                    "type": "string"
                },
                "UserAdvancedGroups": {
                    "type": "string"
                },
                "UserAuthenticationCode": {
                    "type": "string"
                },
                "UserBccEmail": {
                    "type": "string"
                },
                "UserBccMode": {
                    "enum": [
                        "NoTag",
                        "TagBeginning",
                        "TagEnd"
                    ],
                    "type": "string"
                },
                "UserBccTag": {
                    "type": "string"
                },
                "UserBudgetNote": {
                    "type": "string"
                },
                "UserCalendarColorScheme": {
                    "enum": [
                        "Scheme0",
                        "Scheme1",
                        "Scheme2",
                        "Scheme3",
                        "Scheme4",
                        "Scheme5",
                        "Scheme6",
                        "Scheme7",
                        "Scheme8",
                        "Scheme9",
                        "Dashboard"
                    ],
                    "type": "string"
                },
                "UserCreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserCreatedBy": {
                    "type": "string"
                },
                "UserCurrencyName": {
                    "type": "string"
                },
                "UserDateFormat": {
                    "enum": [
                        "DDhMMhYYYY",
                        "YYYYhMMhDD",
                        "MMsDDsYYYY",
                        "DDpMMpYYYY",
                        "YYYYpMMpDD"
                    ],
                    "type": "string"
                },
                "UserDecimalPoint": {
                    "type": "string"
                },
                "UserDefaultSupportCaseChannel": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserDefaultMemberGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserDefaultOpportunity2ndResponsible": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserDefaultOrganisation2ndResponsible": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserEmail": {
                    "type": "string"
                },
                "UserGmtDifference": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserInitials": {
                    "type": "string"
                },
                "UserIntegrationId": {
                    "type": "string"
                },
                "UserIpRestrict": {
                    "type": "string"
                },
                "UserIsRestApiEnabled": {
                    "type": "boolean"
                },
                "UserIsSpellCheckerEnabled": {
                    "type": "boolean"
                },
                "UserIsSupportCaseAvailableStatusEnabled": {
                    "type": "boolean"
                },
                "UserLanguageId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserLastLoginDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserLastTryDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserLoginCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserLoginLog": {
                    "type": "string"
                },
                "UserLoginName": {
                    "type": "string"
                },
                "UserMobilePhone": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "UserPassword": {
                    "type": "string"
                },
                "UserPasswordInUrl": {
                    "type": "boolean"
                },
                "UserPasswordUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserPhoneParameters": {
                    "type": "string"
                },
                "UserSmsLogin": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserSoftCall": {
                    "type": "string"
                },
                "UserSupportCaseExpirationDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserSupportCaseLatest": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserSupportCaseNotificationType": {
                    "enum": [
                        "Never",
                        "StatusEmail",
                        "StatusEmailAndMessage",
                        "Default"
                    ],
                    "type": "string"
                },
                "UserSupportCaseStatus": {
                    "enum": [
                        "Available",
                        "Busy",
                        "OffLine",
                        "Absent"
                    ],
                    "type": "string"
                },
                "UserSynchronizationMode": {
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ],
                    "type": "string"
                },
                "UserTelephone": {
                    "type": "string"
                },
                "UserTerritories": {
                    "type": "string"
                },
                "UserTicket": {
                    "type": "string"
                },
                "UserTicketExpirationDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserTimeFormat": {
                    "enum": [
                        "Hours24",
                        "Hours12"
                    ],
                    "type": "string"
                },
                "UserTitle": {
                    "type": "string"
                },
                "UserUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UserUpdatedBy": {
                    "type": "string"
                },
                "UserWrongPasswordCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserCustom1": {
                    "type": "string"
                },
                "UserCustom2": {
                    "type": "string"
                },
                "UserCustom3": {
                    "type": "string"
                },
                "UserCustom4": {
                    "type": "string"
                },
                "UserCustom5": {
                    "type": "string"
                },
                "UserCustom6": {
                    "type": "string"
                },
                "UserCustom7": {
                    "type": "string"
                },
                "UserCustom8": {
                    "type": "string"
                },
                "UserCustom9": {
                    "type": "string"
                },
                "UserCustom10": {
                    "type": "string"
                },
                "UserCustom11": {
                    "type": "string"
                },
                "UserCustom12": {
                    "type": "string"
                },
                "UserCustom13": {
                    "type": "string"
                },
                "UserCustom14": {
                    "type": "string"
                },
                "UserCustom15": {
                    "type": "string"
                },
                "UserMemo": {
                    "type": "string"
                }
            }
        },
        "UserHookDto": {
            "required": [
                "Filter",
                "Id",
                "IsEnabled",
                "TargetUrl"
            ],
            "type": "object",
            "properties": {
                "Filter": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "enum": [
                            "All",
                            "Current"
                        ],
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "EventType": {
                    "enum": [
                        "Create",
                        "Update",
                        "Delete"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "int64",
                    "type": "integer"
                },
                "IsEnabled": {
                    "type": "boolean"
                },
                "TargetUrl": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "name": "Authorization",
            "in": "header",
            "type": "apiKey",
            "description": "JSON Web Token Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"."
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}